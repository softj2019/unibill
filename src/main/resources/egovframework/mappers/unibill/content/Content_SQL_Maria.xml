<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="content">
	
	<!-- 메뉴 및 화면 정보 조회 -->
	<select id="selectMenuInfo2" parameterType="map" resultType="egovMap">

		SELECT t.menu_id
		     , t.menu_nm
		     , t.tmp_type
		     , t.bmark
		     , t.tbl_nm
		     , t.gridhg
		     , t.dtl_tmp_type
		     , t.scrin_id
		     , t.dtl_w
		     , t.xml_id
		     , (SELECT x.scrin_id
                  FROM fwmenuscrin x
                 WHERE 1 = 1
                   AND t.menu_id = x.menu_id
                   AND x.scrin_id != t.scrin_id
                   AND x.show_sn = 1) AS scrin_id2
             , (SELECT CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END
                  FROM fwscrinsql s
                 WHERE 1 = 1
                   AND t.scrin_id = s.scrin_id) AS scrin_sql_yn
             , case when ext_fun is null or ext_fun ='' then ext_fun
             		when instr(ext_fun, '\\') = 0 then replace(ext_fun, '''', '\\''')
               else  ext_fun end as ext_fun
             , dblclick_yn
             , dblclick_fun
             , click_fun
             , grid_make_fun
             , main_grid_sel_yn
             ,hd_yn
             ,excel_use_reason_yn
             ,sum_yn
             , del_cond
             , find_cond
             ,g.pos_type , g.sn , g.txt
		  FROM (
		        SELECT m.menu_id
				     , m.menu_nm
				     , m.tmp_type
				     , (SELECT CASE WHEN COUNT(*) > 0 THEN 'D' ELSE 'I' END
		                 FROM fwbookmark b
		                WHERE 1 = 1
		                  AND m.menu_id = b.menu_id
		                  AND b.user_id = #{user_id}) AS bmark
				     , s.tbl_nm
				     , ms.gridhg
				     , ms.dtl_tmp_type
				     , s.scrin_id
				     , s.dtl_w
				     , s.xml_id
				     , ms.show_sn
				     , s.ext_fun
				     , s.dblclick_yn
				     , s.dblclick_fun
				     , s.click_fun
				     , s.grid_make_fun
				     , s.main_grid_sel_yn
				     , s.hd_yn
				     , s.excel_use_reason_yn
				     , s.sum_yn
				     , s.del_cond				     
				      , hsnull(ms.find_cond,s.find_cond) find_cond 
				  FROM fwmenuscrin ms  
				 INNER JOIN fwmenu m    ON m.menu_id = ms.menu_id
				 INNER JOIN fwscrin s   ON ms.scrin_id = s.scrin_id 
				 WHERE 1 = 1
				   AND m.menu_id = #{menu_code}
				   AND s.use_yn = 'Y'
				 ORDER BY s.scrin_id
		       ) t
		   INNER JOIN fwrolemenu r
		      ON t.menu_id  = r.menu_id
		     AND t.scrin_id = r.scrin_id
		   left join fwguid g on (t.menu_id = g.menu_id and g.sn=1)   
		   WHERE 1 = 1
		     AND r.role_id = #{role_code}
		     -- AND ROWNUM = 1
		     limit 1

	</select>
	
	
	<!-- 메뉴 및 화면 정보 조회 -->
	<select id="selectMenuInfo" parameterType="map" resultType="egovMap">

		SELECT t.menu_id
		     , t.menu_nm
		     , t.tmp_type
		     , t.vdi_yn
		     , t.bmark
		     , t.tbl_nm
		     , t.gridhg
		     , t.dtl_tmp_type
		     , t.scrin_id
		     , t.dtl_w
		     , t.xml_id
		     , (SELECT x.scrin_id
                  FROM fwmenuscrin x
                 WHERE 1 = 1
                   AND t.menu_id = x.menu_id
                   AND x.scrin_id != t.scrin_id
                   AND x.show_sn = 1) AS scrin_id2
             , (SELECT CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END
                  FROM fwscrinsql s
                 WHERE 1 = 1
                   AND t.scrin_id = s.scrin_id) AS scrin_sql_yn
             , case when ext_fun is null or ext_fun ='' then ext_fun
             		when instr(ext_fun, '\\') = 0 then replace(ext_fun, '''', '\\''')
               else  ext_fun end as ext_fun
             , dext_fun  
             , dblclick_yn
             , dblclick_fun
             , click_fun
             , grid_make_fun
             , main_grid_sel_yn
             ,hd_yn
             ,excel_use_reason_yn
             ,sum_yn
             , del_cond
             , find_cond
             ,g.pos_type , g.sn , g.txt
		  FROM (
		        SELECT m.menu_id
				     , m.menu_nm
				     , m.tmp_type
				     , m.vdi_yn
				     , (SELECT CASE WHEN COUNT(*) > 0 THEN 'D' ELSE 'I' END
		                 FROM fwbookmark b
		                WHERE 1 = 1
		                  AND m.menu_id = b.menu_id
		                  AND b.user_id = #{user_id}) AS bmark
				     , s.tbl_nm
				     , ms.gridhg
				     , ms.dtl_tmp_type
				     , s.scrin_id
				     , s.dtl_w
				     , s.xml_id
				     , ms.show_sn
				     , s.ext_fun
				     , s.dblclick_yn
				     , s.dblclick_fun
				     , s.click_fun
				     , s.grid_make_fun
				     , s.main_grid_sel_yn
				     , s.hd_yn
				     , s.excel_use_reason_yn
				     , s.sum_yn
				     , s.del_cond
				     , hsnull(ms.find_cond,s.find_cond) find_cond
				     , s.dext_fun
				  FROM fwmenuscrin ms  
				 INNER JOIN fwmenu m    ON m.menu_id = ms.menu_id
				 INNER JOIN fwscrin s   ON ms.scrin_id = s.scrin_id
				 WHERE 1 = 1
				   AND m.menu_id = #{menu_code}
				   AND s.use_yn = 'Y'
				 ORDER BY s.scrin_id
		       ) t		       
		   INNER JOIN
		    (select * from  fwrolemenu where   ( #{role_code} like  'D%'  or role_id =#{role_code}) ) r 
		      <!-- 
		   (	select a.* from
				(
					select a.*,b.role_grp,b.role_level role_level2 from fwrolemenu a left join fwrole b on ( a.ROLE_ID=b.ROLE_ID)
					where a.menu_id = #{menu_code}
				) a left join (select role_level,ROLE_ID,role_grp from fwrole where  role_id= #{role_code}  ) b  on (a.role_level2 >=  b.role_level and a.role_grp=b.role_grp)
				limit 1
				
				
			) r	--> 
			     ON t.menu_id  = r.menu_id		     AND t.scrin_id = r.scrin_id
		   left join fwguid g on (t.menu_id = g.menu_id and g.sn=1)   
		   WHERE 1 = 1 
		     -- AND ROWNUM = 1
		     limit 1

	</select>
	
	
	<!-- 화면 안내문구 정보 조회 -->
	<select id="selectGuidList" parameterType="map" resultType="egovMap">
	
		SELECT pos_type
		     , sn
		     , txt
		  FROM fwguid
		 WHERE 1 = 1
		   AND menu_id = #{menu_code}
		 ORDER BY pos_type, sn
	
	</select>
	
	
 <!-- 그리드 정보 조회 -->
	<select id="selectColumnsList" parameterType="map" resultType="egovMap">
	 
		SELECT      
		    <choose>
		     <when test="ContGdId != null and ContGdId != '' ">
		        hsnull(e.col_nm,f.obj_id)   AS col_id       
		      , hsnull(hsnull( e.nm, f.obj_nm), o.obj_nm ) as   obj_nm
		     </when>
		     <otherwise>
		        TRIM(o.col_id)   AS col_id        
		      , hsnull(  f.obj_nm , o.obj_nm ) as   obj_nm
		     </otherwise>
		     </choose>
		       
		   /*  , f.find_obj_nm      AS find_obj_nm */       
		     , f.show_type      AS show_yn      /* 리스트출력구분 */
		     , f.cell_w                         /* 그리드 셀 width */
		     , f.cell_sort                      /* 그리드 셀 정렬 */
		     <if test="col_tbl != null and col_tbl != '' ">  <!--  그리드 값만 사용 상세는 미사용 --> 
		     , o.col_tbl                      /* 그리드 셀 정렬 */
		     </if>		     
		     , ifnull(TRIM(o.xml_id),'')   AS xml_id       /* XML ID */
		     , ifnull(ifnull(f.grp_cd, TRIM(o.grp_cd)),'')   AS grp_cd       /* 그룹코드 */
		     , ifnull(ifnull(f.grp_type, TRIM(o.grp_type)),'') AS grp_type     /* 그룹구분 */
		     , s.scrin_nm       AS tab_nm       /* 탭명 */
		     , s.tbl_nm                         /* 테이블명 */
			 , hsnull(f.obj_sql,o.obj_sql) as obj_sql  /* SQL문 */
			 , hsnull(f.obj_sql,o.obj_sql)  AS fwform_obj_sql     /* SQL문 */ 
			 , hsnull(f.sql_cancel_yn,'N')  AS sql_cancel_yn     /* SQL문 cancel */
		     , hsnull(f.obj_type, ifnull(o.obj_type,'')  ) AS obj_type
		     , hsnull(f.fix_yn,'N' ) AS fix_yn 
		     , hsnull(f.crypto_yn,'N') as crypto_yn                     /* 암호화여부 */
		     , s.dblclick_yn                    /* 그리드더블클릭여부 */
		     , s.dblclick_fun                   /* 그리드더블클릭함수 */
		     , s.click_fun                      /* 그리드클릭함수 */
		     , s.main_grid_sel_yn               /* 상단그리드선택여부 */
             , s.sub_grid_sel_yn                /* 하단그리드선택여부 */
             ,f.file_grp						/* 파일업로드 유형 */
             ,o.data_type
		  <if test="menu_code != null and menu_code != '' ">  <!-- 탭메뉴의 그리드 높이 조회시 -->
		     , (SELECT ms.gridhg
	              FROM fwmenuscrin ms
	             WHERE 1 = 1
 	               AND ms.scrin_id = s.scrin_id
	               AND ms.menu_id = #{menu_code}
	           ) AS gridhg     /* 그리드 높이 */
		  </if>
		  FROM fwscrin s		 	     
	      INNER JOIN fwform f  on  s.scrin_id = f.scrin_id
		  INNER JOIN fwobj o   ON f.obj_id = o.obj_id
		    <if test="ContGdId != null and ContGdId != ''  ">  
		  left JOIN mb_cfgcont_etccol e ON  
		  	e.cont_gd_id = #{ContGdId}
		  	and e.col_nm = o.obj_id
		  </if>    
		WHERE 1 = 1 
		 <if test="show_yn != null and show_yn != '' ">
		 	<if test='show_yn == "2"'>  <!-- 그리드 출력옵션이 2일 경우 화면및엑셀(1), 화면(2), 그리드hidden(4), 그리드hidden 및 엑셀 출력 -->
		 	    AND f.show_type IN ('1','2','4','5')
		 	</if>
		 	
		 	<if test='show_yn == "3"'>  <!-- 그리드 출력옵션이 3일 경우 화면및엑셀(1), 엑셀(3), 그리드 hidden 및 엑셀(5) 출력 -->
		 		AND f.show_type IN ('1','3','5')
		 	</if>
		 	
		 	<if test='show_yn == "4"'>  <!-- 그리드 출력옵션이 3일 경우 화면및엑셀(1), 엑셀(3), 그리드 hidden 및 엑셀(5) 출력 -->
		 		AND f.show_type IN ('1','3','4','5')
		 	</if>		 
		 </if>
		 <if test="dtl_show_yn != null and dtl_show_yn != '' ">  <!-- 상세화면출력여부 -->	
		        AND f.dtl_show_yn = #{dtl_show_yn}
		        AND o.obj_type NOT LIKE ('%button%')
		        AND o.obj_type != 'output'
		 </if>
		 
		 <if test="ContGdId != null and ContGdId != '' ">  
	       and ( e.nm is not null or (e.nm is  null and f.OBJ_ID not like 'data%'))  <!--  pjh 가변처리 -->
	     </if>
	       and hsnull(f.obj_type,o.obj_type)!='title'
		   AND s.scrin_id = #{scrin_code}
		   AND s.use_yn = 'Y'
		   AND f.obj_id NOT IN (SELECT c.obj_id 
		                          FROM fwmenuscrin ms 
		                         INNER JOIN fwcolctl c 
		                            ON ms.menu_id = c.menu_id 
		                           AND ms.scrin_id = c.scrin_id 
		                         WHERE 1 = 1
		                           AND c.role_id  = #{role_code}
		                           AND c.scrin_id = #{scrin_code}                       
		                           AND c.show_yn = 'N')  <!-- 권한이 적용된 객체 제외 -->
		 ORDER BY f.show_sn, f.obj_id
	
	</select>
	
	<!-- 그리드 정보 조회 -->
	<select id="selectColumnsList2" parameterType="map" resultType="egovMap">
	 
		SELECT TRIM(o.col_id)   AS col_id       /* 그리드 colName (컬럼ID) */		     
		     , TRIM(CASE WHEN f.obj_nm IS NULL or f.obj_nm = '' THEN o.obj_nm ELSE f.obj_nm END)  AS obj_nm   /* 그리드 colModel(컬럼명) */
		   /*  , f.find_obj_nm      AS find_obj_nm */       
		     , f.show_type      AS show_yn      /* 리스트출력구분 */
		     , f.cell_w                         /* 그리드 셀 width */
		     , f.cell_sort                      /* 그리드 셀 정렬 */
		     , ifnull(TRIM(o.xml_id),'')   AS xml_id       /* XML ID */
		     , ifnull(TRIM(o.grp_cd),'')   AS grp_cd       /* 그룹코드 */
		     , ifnull(TRIM(o.grp_type),'') AS grp_type     /* 그룹구분 */
		     , s.scrin_nm       AS tab_nm       /* 탭명 */
		     , s.tbl_nm                         /* 테이블명 */
			 , hsnull(f.obj_sql,o.obj_sql) as obj_sql  /* SQL문 */
			 , hsnull(f.obj_sql,o.obj_sql)  AS fwform_obj_sql     /* SQL문 */ 
		     , hsnull(f.obj_type, '' ) AS obj_type
		     , hsnull(f.fix_yn,'N' ) AS fix_yn 
		     , f.crypto_yn                      /* 암호화여부 */
		     , s.dblclick_yn                    /* 그리드더블클릭여부 */
		     , s.dblclick_fun                   /* 그리드더블클릭함수 */
		     , s.click_fun                      /* 그리드클릭함수 */
		     , s.main_grid_sel_yn               /* 상단그리드선택여부 */
             , s.sub_grid_sel_yn                /* 하단그리드선택여부 */
             ,f.file_grp						/* 파일업로드 유형 */
		  <if test="menu_code != null and menu_code != '' ">  <!-- 탭메뉴의 그리드 높이 조회시 -->
		     , (SELECT ms.gridhg
	              FROM fwmenuscrin ms
	             WHERE 1 = 1
 	               AND ms.scrin_id = s.scrin_id
	               AND ms.menu_id = #{menu_code}
	           ) AS gridhg     /* 그리드 높이 */
		  </if>
		  FROM fwscrin s		 
	     INNER JOIN fwform f
	        ON s.scrin_id = f.scrin_id   
		INNER JOIN fwobj o
		   ON f.obj_id = o.obj_id
		WHERE 1 = 1
		 <if test="show_yn != null and show_yn != '' ">
		 	<if test='show_yn == "2"'>  <!-- 그리드 출력옵션이 2일 경우 화면및엑셀(1), 화면(2), 그리드hidden(4), 그리드hidden 및 엑셀 출력 -->
		 	    AND f.show_type IN ('1','2','4','5')
		 	</if>
		 	
		 	<if test='show_yn == "3"'>  <!-- 그리드 출력옵션이 3일 경우 화면및엑셀(1), 엑셀(3), 그리드 hidden 및 엑셀(5) 출력 -->
		 		AND f.show_type IN ('1','3','5')
		 	</if>		 
		 </if>
		 <if test="dtl_show_yn != null and dtl_show_yn != '' ">  <!-- 상세화면출력여부 -->	
		        AND f.dtl_show_yn = #{dtl_show_yn}
		        AND o.obj_type NOT LIKE ('%button%')
		        AND o.obj_type != 'output'
		 </if>
		   AND s.scrin_id = #{scrin_code}
		   AND s.use_yn = 'Y'
		   AND f.obj_id NOT IN (SELECT c.obj_id 
		                          FROM fwmenuscrin ms 
		                         INNER JOIN fwcolctl c 
		                            ON ms.menu_id = c.menu_id 
		                           AND ms.scrin_id = c.scrin_id 
		                         WHERE 1 = 1
		                           AND c.role_id  = #{role_code}
		                           AND c.scrin_id = #{scrin_code}                       
		                           AND c.show_yn = 'N')  <!-- 권한이 적용된 객체 제외 -->
		 ORDER BY f.show_sn
	
	</select>

	<!-- 그리드 정보 조회 -->
	<select id="selectDynamicColumnsList" parameterType="map" resultType="egovMap">
	 
		SELECT TRIM(f.col_nm)   AS col_id       /* 그리드 colName (컬럼ID) */	     
		     , TRIM(CASE WHEN f.nm IS NULL or f.nm = '' THEN o.obj_nm ELSE f.nm END)  AS obj_nm   /* 그리드 colModel(컬럼명) */   
		     , 1      AS show_yn      /* 리스트출력구분 */
		     , 0 as cell_w                         /* 그리드 셀 width */
		     , 'center' as cell_sort                      /* 그리드 셀 정렬 */
		     , ifnull(TRIM(o.xml_id),'')   AS xml_id       /* XML ID */
		     , ifnull(TRIM(o.grp_cd),'')   AS grp_cd       /* 그룹코드 */
		     , ifnull(TRIM(o.grp_type),'') AS grp_type     /* 그룹구분 */
		     , s.scrin_nm       AS tab_nm       /* 탭명 */
		     , s.tbl_nm                         /* 테이블명 */
			 , ifnull(o.obj_sql,'') as obj_sql  /* SQL문 */
			 , ''  AS fwform_obj_sql     /* SQL문 */ 
		     , '' AS obj_type
		     , 'N' AS fix_yn 
		     , null as crypto_yn                      /* 암호화여부 */
		     , s.dblclick_yn                    /* 그리드더블클릭여부 */
		     , s.dblclick_fun                   /* 그리드더블클릭함수 */
		     , s.click_fun                      /* 그리드클릭함수 */
		     , s.main_grid_sel_yn               /* 상단그리드선택여부 */
             , s.sub_grid_sel_yn                /* 하단그리드선택여부 */
		  <if test="menu_code != null and menu_code != '' ">  <!-- 탭메뉴의 그리드 높이 조회시 -->
		     , (SELECT ms.gridhg
	              FROM fwmenuscrin ms
	             WHERE 1 = 1
 	               AND ms.scrin_id = s.scrin_id
	               AND ms.menu_id = #{menu_code}
	           ) AS gridhg     /* 그리드 높이 */
		  </if>
		  FROM fwscrin s		 
	     join mb_cfgcont_etccol f 
		LEFT JOIN fwobj o
		   ON f.col_id = o.obj_id
		WHERE 1 = 1
		 <if test="dtl_show_yn != null and dtl_show_yn != '' ">  <!-- 상세화면출력여부 -->	
		        <!--테스트쿼리로 임시로 막아둠 AND f.dtl_show_yn = #{dtl_show_yn} -->
		        AND o.obj_type NOT LIKE ('%button%')
		        AND o.obj_type != 'output'
		 </if>
		   AND s.scrin_id = #{scrin_code}
		   AND s.use_yn = 'Y'
		   AND f.cont_gd_id= #{gd_id}
		   AND f.col_id NOT IN (SELECT c.obj_id 
		                          FROM fwmenuscrin ms 
		                         INNER JOIN fwcolctl c 
		                            ON ms.menu_id = c.menu_id 
		                           AND ms.scrin_id = c.scrin_id 
		                         WHERE 1 = 1
		                           AND c.role_id  = #{role_code}
		                           AND c.scrin_id = #{scrin_code}                       
		                           AND c.show_yn = 'N')  <!-- 권한이 적용된 객체 제외 -->
		 ORDER BY f.show_sn
	
	</select>
	
	
	
	<!-- 검색 및 상세 객체 정보 조회 trim w-->
	<select id="selectContGdId" parameterType="map" resultType="egovMap"> 
	        select cont_gd_id from mb_cfgod where od_no=( select od_no from #{TableName} where ubseq=#{ubseq} ) 
     </select>
    
	<!-- 검색 및 상세 객체 정보 조회 trim w-->
	<select id="selectSearchObjectList" parameterType="map" resultType="egovMap"> 
		SELECT f.obj_id
		     , ifnull(f.up_obj_id,'') as up_obj_id		     
		     
		     <choose>
		     <when test="ContGdId != null and ContGdId != '' ">  
		      , hsnull(hsnull( e.nm, f.obj_nm), a.obj_nm ) as   obj_nm
		     </when>
		     <otherwise>
		      , hsnull(  f.obj_nm , a.obj_nm ) as   obj_nm
		     </otherwise>
		     </choose>
		       
		     , ifnull(a.col_id, '') as col_id
		     , ifnull(a.obj_pos, '') as obj_pos 
		     , hsnull(f.obj_type, a.obj_type ) AS obj_type
		     , hsnull(f.fix_yn,'N' ) AS fix_yn 
		     , ifnull(f.find_item_w, '') as find_item_w
		     , ifnull(f.col_pos, '') as col_pos
		     , ifnull(f.row_pos, '') as row_pos
		     , CASE WHEN f.obj_sql IS NULL or f.obj_sql = '' THEN ifnull(a.xml_id,'')   ELSE '' END AS xml_id 
		     , CASE WHEN f.obj_sql IS NULL or f.obj_sql = '' THEN ifnull(ifnull(f.grp_cd, a.grp_cd),'')   ELSE '' END AS grp_cd
		     , CASE WHEN f.obj_sql IS NULL or f.obj_sql = '' THEN ifnull(ifnull(f.grp_type, a.grp_type),'')  ELSE '' END AS grp_type
		     , ifnull(f.dtl_row_mgr,'') as dtl_row_mgr
		     , ifnull(f.w, '') as w
		     , ifnull(f.dtl_must_yn, '') as dtl_must_yn
		     , (SELECT COUNT(*)
		          FROM fwform x
		         WHERE 1 = 1
		           AND x.up_obj_id = f.obj_id) AS subformyn
		     , (SELECT COUNT(y.scrin_id)
                  FROM fwform y
                 WHERE 1 = 1
                   AND f.scrin_id = y.scrin_id
                   AND y.row_pos > 0
                   AND y.find_show_yn = 'Y') AS maxxpos
             , (SELECT z.obj_nm
                  FROM fwobj z
                 WHERE 1 = 1
                   AND z.obj_id  = f.up_obj_id) AS up_col_id 
             , ifnull(f.dtl_show_yn, '') as dtl_show_yn
             , ifnull(f.dtl_obj_w, '') as dtl_obj_w
             , ifnull(f.dtl_row_pos, '') as dtl_row_pos
             , ifnull(f.dtl_col_pos, '') as dtl_col_pos
             , ifnull(f.dtl_col_pos + dtl_row_mgr, 0) AS col_mgr_cnt  /* 상세열위치 + 상세행병합 */
	         , (SELECT MAX(w.dtl_col_pos)
	              FROM fwform w
	             WHERE 1 =1 
	               AND w.scrin_id = f.scrin_id) AS dtl_max_col    /* 상세열위치 MAX */
	         , ifnull(f.day_find_yn,'') as day_find_yn                      /* 일자검색여부(from ~ to 검색 여부) */
			 , ifnull( (CASE WHEN f.obj_sql IS NULL or f.obj_sql = '' THEN a.obj_sql ELSE f.obj_sql END),'') AS obj_sql /* SQL문 */
			 , ifnull(f.obj_sql, a.obj_sql)         AS fwform_obj_sql/* SQL문 */
			 , ifnull(sql_cancel_yn, 'N') as sql_cancel_yn /* SQL문 취소여부*/
	         , ifnull(f.dtl_role_row_mgr, '') AS dtl_role_mgr /* 상세권한행병합 */
	         , ifnull(a.auto_gen_col, '') as auto_gen_col                     	/* 자동완성컬럼 */
	         , ifnull(f.must_yn, '') as  must_yn                        		/* 검색필수선택여부 */
	         , ifnull(f.crypto_yn, '') as  crypto_yn                      		/* 암호화여부 */
	         
	         , ifnull(f.ext_pre_fun, '') as  extpr_fun                    		/* 버튼 이전 처리 */
	         , ifnull(f.ext_post_fun, '') as  extpo_fun                   		/* 버튼 이후 처리 */
	         , ifnull(f.prc_nm, '') as  prc_nm                   				/* 버튼 이후 실행 함수 */
	         
	         
	         , ifnull(case
	         			when f.ext_fun is null or ext_fun ='' then f.ext_fun
	         			when instr(f.ext_fun, '\\') = 0 then replace(f.ext_fun, '''', '\\''')
	         		  else  f.ext_fun 
	         		  end, '') as    ext_fun                      /* 실행함수 */	         
	         , hsnull(f.find_type, a.find_type) AS find_type /* 검색타입 */	            
	         ,( case when hsnull(f.max_len,0) >0 then hsnull(f.max_len,0)
	          		 when hsnull(a.max_len,0) >0 then hsnull(a.max_len,0)
	          		 else hsnull(d.max_len,512) 
	          		 end ) as max_len      /* 최대길이/ default 512 */
	         , ifnull(f.find_id_sql, '') as  find_id_sql                     /* 검색IDSQL */	        
	        , d.defval   
 
	         /*
	 <if test="dtl_show_yn != null and dtl_show_yn != '' ">     */  <!-- 상세(등록/수정) 화면 출력일 경우 특정 권한을 가진 경우 메뉴별/화면별 obj별 출력 및 edit 여부 조회    -->
	 	     , x.obj_id   AS r_obj_id
             , x.show_yn  AS r_show_yn
             , x.write_yn AS r_write_yn             
		/*	 </if> */
			 , a.data_type
		  FROM fwobj a	  		  
		  left join	(
		  		SELECT column_name
		  			, (case when data_type in ('bigint',   'int', 'smallint', 'tinyint') 
              			then regexp_replace(regexp_replace(COLUMN_TYPE,'[a-z]','') , '[가-힣()]','') 
              		when data_type in ( 'decimal', 'double', 'float' )               		then NUMERIC_PRECISION
              		else character_maximum_length end) as max_len              		
              		,( case when COLUMN_DEFAULT is not null then COLUMN_DEFAULT
	               when data_type like '%int%' or data_type like '%decimal%' or data_type like '%num%' or  data_type like '%float%' or  data_type like '%double%' then 0
	               else null end) as defval	               
         		 FROM  INFORMATION_SCHEMA.columns  A 
         		 WHERE 1 = 1 and TABLE_SCHEMA=#{owner}
        		 and table_name = #{masterTableName}  
        	) d on ( a.COL_ID=d.column_name)
		  INNER JOIN fwform f ON a.obj_id = f.obj_id
		  <if test="ContGdId != null and ContGdId != ''  ">  
		  left JOIN mb_cfgcont_etccol e ON  
		  	e.cont_gd_id = #{ContGdId}
		  	and e.col_nm = a.obj_id
		  </if>   
            
     <!-- 상세(등록/수정) 화면 출력일 경우 특정 권한을 가진 경우 메뉴별/화면별 obj별 출력 및 edit 여부 조회    -->
     <!--        
     <if test="dtl_show_yn != null and dtl_show_yn != '' ">        -->
         LEFT OUTER JOIN (
	                      SELECT c.menu_id
	                           , c.scrin_id
	                           , c.role_id
	                           , c.obj_id
	                           , c.show_yn
	                           , c.write_yn
	                        FROM fwmenuscrin ms
	                       INNER JOIN fwcolctl c
	                          ON ms.menu_id = c.menu_id
	                         AND ms.scrin_id = c.scrin_id
	                       WHERE 1 = 1
	                         AND c.role_id = #{role_code}
	                      ) x  
	        ON f.scrin_id = x.scrin_id
	       AND f.obj_id   = x.obj_id
	       <!--
     </if> -->
		 WHERE 1 = 1
		   and hsnull(x.show_yn,'Y')='Y'
		   AND f.scrin_id = #{scrin_code}		   
		 <if test="ContGdId != null and ContGdId != ''  ">   
	       and ( e.nm is not null or (e.nm is  null and f.OBJ_ID not like 'data%'))  <!--  pjh 가변처리 -->
	     </if>
		 <if test="find_show_yn != null and find_show_yn != '' ">     <!-- 검색조건 출력여부 -->
		   AND f.obj_id NOT IN (SELECT c.obj_id 
		                          FROM fwmenuscrin ms 
		                         INNER JOIN fwcolctl c 
		                            ON ms.menu_id = c.menu_id 
		                           AND ms.scrin_id = c.scrin_id 
		                         WHERE 1 = 1
		                           AND c.role_id  = #{role_code}
		                           AND c.scrin_id = #{scrin_code}      
		                           and c.obj_id!='btn_search'                 
		                           AND c.show_yn = 'N')  <!-- 권한이 적용된 객체 제외 -->
		 	<if test="obj_id == null or obj_id == '' ">               <!-- 상위 폼 검색을 위한... -->
			   AND (f.up_obj_id IS NULL OR f.up_obj_id = '')
			 </if>
			 <if test="obj_id != null and obj_id != '' ">              <!-- 객체ID (하위 폼 검색을 위한) -->
			   AND f.up_obj_id = #{obj_id}
			 </if>
		   AND f.find_show_yn = #{find_show_yn} 
		      
		 ORDER BY f.row_pos, f.col_pos
		 </if>
		 <if test="dtl_show_yn != null and dtl_show_yn != '' ">        <!-- 상세(등록/수정) 화면 출력여부 -->
		    <if test='flag == "main"'>         	
         		AND (f.up_obj_id IS NULL OR f.up_obj_id = '')
         	</if>
         	<if test='flag == "sub"'>
         		AND (f.up_obj_id IS NOT NULL OR f.up_obj_id != '')
         	</if>         	
		   AND f.dtl_show_yn = #{dtl_show_yn}	   
		 ORDER BY f.dtl_row_pos, f.dtl_col_pos
		 </if>
		
	</select>
	
	
	
	
	<!-- 검색 및 상세 객체 정보 조회 trim w-->
	<select id="selectSearchObjectListOrg" parameterType="map" resultType="egovMap">
	
		SELECT f.obj_id
		     , ifnull(f.up_obj_id,'') as up_obj_id		     
		     , CASE WHEN f.obj_nm IS NULL or f.obj_nm = '' THEN a.obj_nm ELSE f.obj_nm END AS obj_nm
		     , ifnull(a.col_id, '') as col_id
		     , ifnull(a.obj_pos, '') as obj_pos 
		     , hsnull(f.obj_type, a.obj_type ) AS obj_type
		     , hsnull(f.fix_yn,'N' ) AS fix_yn 
		     , ifnull(f.find_item_w, '') as find_item_w
		     , ifnull(f.col_pos, '') as col_pos
		     , ifnull(f.row_pos, '') as row_pos
		     , CASE WHEN f.obj_sql IS NULL or f.obj_sql = '' THEN ifnull(a.xml_id,'')   ELSE '' END AS xml_id
		     , CASE WHEN f.obj_sql IS NULL or f.obj_sql = '' THEN ifnull(a.grp_cd,'')   ELSE '' END AS grp_cd
		     , CASE WHEN f.obj_sql IS NULL or f.obj_sql = '' THEN ifnull(a.grp_type,'') ELSE '' END AS grp_type
		     , ifnull(f.dtl_row_mgr,'') as dtl_row_mgr
		     , ifnull(f.w, '') as w
		     , ifnull(f.dtl_must_yn, '') as dtl_must_yn
		     , (SELECT COUNT(*)
		          FROM fwform x
		         WHERE 1 = 1
		           AND x.up_obj_id = f.obj_id) AS subformyn
		     , (SELECT COUNT(y.scrin_id)
                  FROM fwform y
                 WHERE 1 = 1
                   AND f.scrin_id = y.scrin_id
                   AND y.row_pos > 0
                   AND y.find_show_yn = 'Y') AS maxxpos
             , (SELECT z.obj_nm
                  FROM fwobj z
                 WHERE 1 = 1
                   AND z.obj_id  = f.up_obj_id) AS up_col_id 
             , ifnull(f.dtl_show_yn, '') as dtl_show_yn
             , ifnull(f.dtl_obj_w, '') as dtl_obj_w
             , ifnull(f.dtl_row_pos, '') as dtl_row_pos
             , ifnull(f.dtl_col_pos, '') as dtl_col_pos
             , ifnull(f.dtl_col_pos + dtl_row_mgr, 0) AS col_mgr_cnt  /* 상세열위치 + 상세행병합 */
	         , (SELECT MAX(w.dtl_col_pos)
	              FROM fwform w
	             WHERE 1 =1 
	               AND w.scrin_id = f.scrin_id) AS dtl_max_col    /* 상세열위치 MAX */
	         , ifnull(f.day_find_yn,'') as day_find_yn                      /* 일자검색여부(from ~ to 검색 여부) */
			 , ifnull( (CASE WHEN f.obj_sql IS NULL or f.obj_sql = '' THEN a.obj_sql ELSE f.obj_sql END),'') AS obj_sql /* SQL문 */
			 , ifnull(f.obj_sql, a.obj_sql)         AS fwform_obj_sql/* SQL문 */
	         , ifnull(f.dtl_role_row_mgr, '') AS dtl_role_mgr /* 상세권한행병합 */
	         , ifnull(a.auto_gen_col, '') as auto_gen_col                     /* 자동완성컬럼 */
	         , ifnull(f.must_yn, '') as  must_yn                        /* 검색필수선택여부 */
	         , ifnull(f.crypto_yn, '') as  crypto_yn                      /* 암호화여부 */
	         
	         , ifnull(f.ext_pre_fun, '') as  extpr_fun                    /* 버튼 이전 처리 */
	         , ifnull(f.ext_post_fun, '') as  extpo_fun                   /* 버튼 이후 처리 */
	         
	         , ifnull(case
	         			when f.ext_fun is null or ext_fun ='' then f.ext_fun
	         			when instr(f.ext_fun, '\\') = 0 then replace(f.ext_fun, '''', '\\''')
	         		  else  f.ext_fun 
	         		  end, '') as    ext_fun                      /* 실행함수 */
	         , ifnull(f.find_type, '') as find_type                       /* 검색타입 */
	         ,case when a.MAX_LEN <![CDATA[ >= ]]>
              	(SELECT case when data_type in ('bigint', 'decimal', 'double', 'float', 'int', 'smallint', 'tinyint') then regexp_replace(regexp_replace(COLUMN_TYPE,'[a-z]','') , '[가-힣()]','')  else character_maximum_length end as max_len
         		 FROM  INFORMATION_SCHEMA.columns  A 
         		 WHERE 1 = 1 and TABLE_SCHEMA=#{owner}
        		 and table_name = #{masterTableName} and column_name = a.COL_ID
        		) or a.MAX_LEN is null or a.MAX_LEN = '0'
        	  then 
         		(SELECT case when data_type in ('bigint', 'decimal', 'double', 'float', 'int', 'smallint', 'tinyint') then regexp_replace(regexp_replace(COLUMN_TYPE,'[a-z]','') , '[가-힣()]','')  else character_maximum_length end as max_len
                 FROM  INFORMATION_SCHEMA.columns  A
				 WHERE 1 = 1 and TABLE_SCHEMA=#{owner}
        		 and table_name = #{masterTableName} and column_name = a.COL_ID
        		 ) 
        	   else  a.MAX_LEN end  as max_len                          /* 최대길이 */
	         , ifnull(f.find_id_sql, '') as  find_id_sql                     /* 검색IDSQL */
	        
	        ,(  select ( case when COLUMN_DEFAULT is not null then COLUMN_DEFAULT
	               when data_type like '%int%' or data_type like '%decimal%' or data_type like '%num%' or  data_type like '%float%' or  data_type like '%double%' then 0
	               else null end) defval
	 			FROM INFORMATION_SCHEMA.columns A WHERE 1 = 1 and TABLE_SCHEMA=#{owner}  and table_name = #{masterTableName} and column_name = a.COL_ID
	 		) as defval   
 
	         /*
	 <if test="dtl_show_yn != null and dtl_show_yn != '' ">     */  <!-- 상세(등록/수정) 화면 출력일 경우 특정 권한을 가진 경우 메뉴별/화면별 obj별 출력 및 edit 여부 조회    -->
	 	     , x.obj_id   AS r_obj_id
             , x.show_yn  AS r_show_yn
             , x.write_yn AS r_write_yn             
/*	 </if> */
		  FROM fwobj a	  
         INNER JOIN fwform f      
            ON a.obj_id = f.obj_id
     <if test="dtl_show_yn != null and dtl_show_yn != '' ">       <!-- 상세(등록/수정) 화면 출력일 경우 특정 권한을 가진 경우 메뉴별/화면별 obj별 출력 및 edit 여부 조회    -->
         LEFT OUTER JOIN (
	                      SELECT c.menu_id
	                           , c.scrin_id
	                           , c.role_id
	                           , c.obj_id
	                           , c.show_yn
	                           , c.write_yn
	                        FROM fwmenuscrin ms
	                       INNER JOIN fwcolctl c
	                          ON ms.menu_id = c.menu_id
	                         AND ms.scrin_id = c.scrin_id
	                       WHERE 1 = 1
	                         AND c.role_id = #{role_code}
	                      ) x  
	        ON f.scrin_id = x.scrin_id
	       AND f.obj_id   = x.obj_id
     </if>
		 WHERE 1 = 1
		   AND f.scrin_id = #{scrin_code}		   
		 <if test="find_show_yn != null and find_show_yn != '' ">     <!-- 검색조건 출력여부 -->
		   AND f.obj_id NOT IN (SELECT c.obj_id 
		                          FROM fwmenuscrin ms 
		                         INNER JOIN fwcolctl c 
		                            ON ms.menu_id = c.menu_id 
		                           AND ms.scrin_id = c.scrin_id 
		                         WHERE 1 = 1
		                           AND c.role_id  = #{role_code}
		                           AND c.scrin_id = #{scrin_code}                       
		                           AND c.show_yn = 'Y')  <!-- 권한이 적용된 객체 제외 -->
		 	<if test="obj_id == null or obj_id == '' ">               <!-- 상위 폼 검색을 위한... -->
			   AND (f.up_obj_id IS NULL OR f.up_obj_id = '')
			 </if>
			 <if test="obj_id != null and obj_id != '' ">              <!-- 객체ID (하위 폼 검색을 위한) -->
			   AND f.up_obj_id = #{obj_id}
			 </if>
		   AND f.find_show_yn = #{find_show_yn}
		 ORDER BY f.row_pos, f.col_pos
		 </if>
		 <if test="dtl_show_yn != null and dtl_show_yn != '' ">        <!-- 상세(등록/수정) 화면 출력여부 -->
		    <if test='flag == "main"'>         	
         		AND (f.up_obj_id IS NULL OR f.up_obj_id = '')
         	</if>
         	<if test='flag == "sub"'>
         		AND (f.up_obj_id IS NOT NULL OR f.up_obj_id != '')
         	</if>         	
		   AND f.dtl_show_yn = #{dtl_show_yn}	   
		 ORDER BY f.dtl_row_pos, f.dtl_col_pos
		 </if>
		
	</select>
	
	
		<!-- 검색 및 상세 객체 정보 조회 trim w-->
	<select id="selectSearchObjectList2" parameterType="map" resultType="egovMap">
			
		select  
		f.obj_id 
		, hsnull(f.up_obj_id,'') as up_obj_id  
		, hsnull(f.obj_nm,a.obj_nm) as obj_nm  
		, hsnull(f.obj_type, a.obj_type ) AS obj_type 
		, hsnull(f.fix_yn,'N' ) AS fix_yn 
		, hsnull(f.find_item_w, '') as find_item_w 
		, hsnull(f.col_pos, '') as col_pos 
		, hsnull(f.row_pos, '') as row_pos
		, hsnull(f.dtl_col_pos, '') as dtl_col_pos 
		, hsnull(f.dtl_row_pos, '') as dtl_row_pos
		, hsnull(f.dtl_row_mgr, '') as dtl_row_mgr
		, hsnull(f.dtl_show_yn, '') as dtl_show_yn
		, hsnull(f.dtl_obj_w, '') as dtl_obj_w 
		, hsnull(f.crypto_yn, '') as crypto_yn
		, hsnull(f.find_show_yn, 'N') as find_show_yn
		, hsnull(f.w, '') as w 
		, hsnull(f.must_yn, '') as must_yn
		, hsnull(f.dtl_must_yn, '') as dtl_must_yn
		, hsnull(f.dtl_col_pos + dtl_row_mgr, 0) AS col_mgr_cnt
		, hsnull(f.find_type, hsnull(f.obj_type, a.obj_type)) AS find_type
		, hsnull(f.dtl_role_row_mgr, '') AS dtl_role_mgr
		, hsnull(f.find_id_sql, '') as find_id_sql
		, hsnull(f.obj_sql, a.obj_sql) as obj_sql
		-- , hsnull(f.obj_sql, a.obj_sql) as fwform_obj_sql
		, hsnull(a.col_id,'') as col_id
		, hsnull(a.obj_pos, '') as obj_pos
		, hsnull(a.auto_gen_col, '') as auto_gen_col
		-- , hsnull(f.obj_sql, hsnull(f.xml_id, a.xml_id)) as xml_id
		-- , hsnull(f.obj_sql, hsnull(a.grp_cd, '')) as grp_cd
		, hsnull(f.xml_id, a.xml_id) as xml_id
		, hsnull(a.grp_cd, '') as grp_cd
		, hsnull(a.grp_type, '') as grp_type
		, hsnull(x.write_yn, 'Y') as write_yn
		, hsnull(x.show_yn, 'Y') as show_yn
		, hsnull(a.max_len, '0') as max_len
		, hsnull(x.obj_id, '') as r_obj_id
		, hsnull(x.show_yn, '') as r_show_yn
		, hsnull(x.write_yn, '') as r_write_yn 
		-- , (case when hsnull(f.up_obj_id,'')='' then 0 else 1 end) as subformyn
		, (SELECT COUNT(*) FROM fwform x WHERE 1 = 1 AND f.scrin_id = x.scrin_id AND x.up_obj_id = f.obj_id) AS subformyn 
		, (SELECT COUNT(y.scrin_id) FROM fwform y WHERE 1 = 1 AND f.scrin_id = y.scrin_id AND y.row_pos > 0 AND y.find_show_yn = 'Y') AS maxxpos 
		, (SELECT MAX(w.dtl_col_pos) FROM fwform w WHERE 1 =1 AND w.scrin_id = f.scrin_id) AS dtl_max_col /* 상세열위치 MAX */
		, ifnull(f.day_find_yn,'') as day_find_yn /* 일자검색여부(from ~ to 검색 여부) */  
		, ifnull(case when f.ext_fun is null or ext_fun ='' then f.ext_fun when instr(f.ext_fun, '\\') = 0 then replace(f.ext_fun, '''', '\\''') else f.ext_fun end, '') as ext_fun /* 실행함수 */
		, (SELECT z.obj_nm     FROM fwobj z   WHERE 1 = 1  AND z.obj_id  = f.up_obj_id) AS up_col_id  -- nm ? 
		, 0 defval
		from fwform  f 
		left join fwobj a on (f.OBJ_ID=a.OBJ_ID)
		LEFT JOIN ( 
			SELECT c.menu_id , c.scrin_id , c.role_id , c.obj_id , hsnull(c.show_yn,'Y') show_yn , c.write_yn 
			FROM fwmenuscrin ms 
			INNER JOIN fwcolctl c ON ms.menu_id = c.menu_id AND ms.scrin_id = c.scrin_id WHERE 1 = 1 
			AND c.role_id = #{role_code}           
		) x ON ( f.scrin_id = x.scrin_id AND f.obj_id = x.obj_id )
		where f.scrin_id = #{scrin_code}    
			and  x.SHOW_yn!='N'
		   <choose>
		    <when test="dtl_show_yn != null and dtl_show_yn != '' ">   
		       <if test='flag == "main"'>         	
         		AND (f.up_obj_id IS NULL OR f.up_obj_id = '')
	         	</if>
	         	<if test='flag == "sub"'>
	         		AND (f.up_obj_id IS NOT NULL OR f.up_obj_id != '')
	         	</if>         	
			   AND f.dtl_show_yn = #{dtl_show_yn}	   
		    </when> 
		    <otherwise>
		       AND ( f.find_show_yn='Y'  )   
		    </otherwise>
		  </choose>
		  
		ORDER BY f.dtl_row_pos, f.dtl_col_pos  
	</select>
	
	<!-- 목록조회, 총 데이터수공통 조건 -->
	<sql id="searchSql">
		<if test="whereCol != null and whereCol != '' ">   
		     AND ${whereCol}
		  </if>
		 <foreach collection="searchColumnsList" item="item" index="index"  >
				${item}
	 	 </foreach>     		
	
	</sql>
	
	<!-- 데이터 목록 조회 -->
	<select id="selectDataList" parameterType="map" resultType="egovMap">
	
		SELECT ubseq,       
			  <foreach collection="selectColumnsList" item="item" index="index"  separator=", ">
				${item}
			  </foreach>
		  FROM (
		  		SELECT ROWNUM rnum
		  		     , M.*
		  		  FROM (
		  		  		SELECT <include refid="com.hsck.ubfw.component.include.maria.rownum" />
		  		  		     , T.*
		  		  		  FROM ${tableName} T
		  		  		  , <include refid="com.hsck.ubfw.component.include.maria.rownumTbl" />
					     WHERE 1 = 1					       
					     <include refid="searchSql" />
					     <choose>
						     <when test="OrderByColumn != null and OrderByColumn != ''">
						     	ORDER BY ${OrderByColumn}
						     	<choose>
							     	<when test="OrderByType != null and OrderByType != ''">
							     		${OrderByType}
							     	</when>
							     	<otherwise>
							     		ASC
							     	</otherwise>
						     	</choose>
							</when>
							<otherwise> 
								<foreach collection="selectColumnsListInit" item="item" index="index" open="ORDER BY " separator=", ">
									${item} ASC
				  				</foreach>
							</otherwise>
						</choose>
		  		       ) M		  		   
		       ) t
	      WHERE rnum <![CDATA[ <= #{lastIndex} ]]> AND rnum <![CDATA[ > #{firstIndex} ]]>

	</select>
	
	<!-- 데이터 목록 조회 -->
	<select id="selectBDataList" parameterType="map" resultType="egovMap">
	
		SELECT rnum as ubseq,       
			  <foreach collection="selectColumnsList" item="item" index="index"  separator=", ">
				${item}
			  </foreach>
		  FROM (
		  		SELECT ROWNUM rnum
		  		     , M.*
		  		  FROM (
		  		  		SELECT <include refid="com.hsck.ubfw.component.include.maria.rownum" />
		  		  		     , T.*
		  		  		  FROM ${tableName} T
		  		  		  , <include refid="com.hsck.ubfw.component.include.maria.rownumTbl" />
					     WHERE 1 = 1					       
					     <include refid="searchSql" />
					     <choose>
						     <when test="OrderByColumn != null and OrderByColumn != ''">
						     	ORDER BY ${OrderByColumn}
						     	<choose>
							     	<when test="OrderByType != null and OrderByType != ''">
							     		${OrderByType}
							     	</when>
							     	<otherwise>
							     		ASC
							     	</otherwise>
						     	</choose>
							</when>
							<otherwise> 
								<foreach collection="selectColumnsListInit" item="item" index="index" open="ORDER BY " separator=", ">
									${item} ASC
				  				</foreach>
							</otherwise>
						</choose>
		  		       ) M		  		   
		       ) t
	      WHERE rnum <![CDATA[ <= #{lastIndex} ]]> AND rnum <![CDATA[ > #{firstIndex} ]]>

	</select>
	
	<!-- 데이터 목록 총 건수 -->
	<select id="selectDataListCnt" parameterType="map" resultType="int">
	
		SELECT COUNT(*) totcnt
	      FROM ${tableName}
		 WHERE 1 = 1
	   <include refid="searchSql" />
	
	</select>


	<!--  메뉴 권한 조회 -->
	<select id="selectRoleMenu" parameterType="map" resultType="int" >
	
		SELECT count(role_id)
		  FROM fwrolemenu
		 WHERE 1 = 1
		   AND scrin_id = #{scrin_code}
		   AND ( #{role_code} like  'D%'  or role_id =#{role_code})
	
	</select>
		
	<!-- 엑셀 다운로드 데이터 목록 조회 -->
	<select id="selectDataExcel" parameterType="map" resultType="egovMap">
	
		SELECT 
			<if test='tptype == "A"' >
				ubseq,
			</if>
			<foreach collection="selectColumnsList" item="item" index="index"  separator=", ">
				${item}
			</foreach>
		  FROM (
		  		SELECT ROWNUM rnum
		  		     , M.*
		  		  FROM (
		  		  		SELECT <include refid="com.hsck.ubfw.component.include.maria.rownum" />
		  		  		     , T.*
		  		  		  FROM ${tableName} T
		  		  		  , <include refid="com.hsck.ubfw.component.include.maria.rownumTbl" />
					     WHERE 1 = 1					       
					     <include refid="searchSql" />
					     <choose>
						     <when test="OrderByColumn != null and OrderByColumn != ''">
						     	ORDER BY ${OrderByColumn}
						     	<choose>
							     	<when test="OrderByType != null and OrderByType != ''">
							     		${OrderByType}
							     	</when>
							     	<otherwise>
							     		ASC
							     	</otherwise>
						     	</choose>
							</when>
							<otherwise> 
								<foreach collection="selectColumnsListInit" item="item" index="index" open="ORDER BY " separator=", ">
									${item} ASC
				  				</foreach>
							</otherwise>
						</choose>
		  		       ) M		  		   
		       ) t
	</select>
	
	<!-- 데이터 등록 -->
	<insert id="insertContent" parameterType="map">
	
		INSERT INTO ${tableName} (ubseq, reg_id, upd_id, reg_tm, upd_tm
								 ,  
		                          <foreach collection="insertColumnsList" item="item" index="index" separator=", " close="">
									${item}
								  </foreach>
				 <if test="insertColumnsListF != null " >		          
								  ,
								   <foreach collection="insertColumnsListF" item="item" index="index" separator=", " close="">
									${item}
								  </foreach>
				 </if>
				 )
				 				  
		        VALUES (#{ubseq}
		        	  ,	#{reg_id}
		              , #{upd_id}
		              ,  f_getcurtm('')		              
		              ,  f_getcurtm('')
		              ,            
		              <foreach collection="insertDataList" item="item" index="index" separator=", " close="">
						  #{item}
					  </foreach> 
					  <if test="insertDataListF != null " >		 
					    ,
					 	 <foreach collection="insertDataListF" item="item" index="index" separator=", " close="">
						 ${item}
					    </foreach>
					 </if>
					 )
					 
					  
	
	</insert>
	
	
	
	<!-- 데이터 등록 -->
	<insert id="insertContentHis" parameterType="map"> 
	 INSERT INTO ${tableName}his  
	 select #{hisubseq}  hisubseq, a.* from ${tableName} a
	 where ubseq=#{ubseq} 
	</insert>
	
	
	<!-- 데이터 수정 -->
	<update id="updateContent" parameterType="map">
	
		UPDATE ${tableName}
		   SET upd_id = #{upd_id}
		     , upd_tm =  f_getcurtm('')
		     , 
		   <foreach collection="updateColumnsList" item="item" index="index"  separator=", ">
			 ${item}
		   </foreach> 
		 WHERE 1 = 1
		   AND ubseq = #{ubseq}
		   	<if test="where_cond != null and where_cond != '' ">    
	           ${where_cond} 
	        </if>
	        <!-- 
			<if test="role_id != null and role_id != ''  and lower(tableName)='cm_cfguser' ">    
	           and #{role_id} in ( select role_id from fwrole where role_level >= ( select role_level from fwrole where role_id= #{role_id} ) ) 
	        </if>
	 		-->
	
	</update>
	
	
	
	<!-- 데이터 삭제 -->
	<delete id="deleteContent" parameterType="map">
	
		DELETE FROM ${tableName}
		      WHERE 1 = 1
		        AND ubseq IN (${ubSeqArr})
	
	</delete>
	
	
		<!-- 데이터 삭제 -->
	<delete id="cancelContent" parameterType="map">
	
		update   ${tableName} set
				  upd_tm =  f_getcurtm('')
		     	, del_tm =  f_getcurtm('')  
			<if test="reg_id != null and reg_id != '' ">    
				,upd_id = #{reg_id}
			</if>
		      WHERE 1 = 1
		        AND ubseq IN (${ubSeqArr})
	
	</delete>
	
		<!-- 데이터 승인 -->
	<delete id="confirmContent" parameterType="map">
	
		update   ${tableName} set
				  upd_tm =  f_getcurtm('')
		     	, confirm_yn =  'Y'
			<if test="reg_id != null and reg_id != '' ">    
				,upd_id = #{reg_id}
			</if>
		      WHERE 1 = 1
		        AND ubseq IN (${ubSeqArr})
	
	</delete>
	
	<!-- 데이터 상세정보 -->
	<select id="selectContentDetail" parameterType="map" resultType="com.hsck.ubfw.component.com.cmm.util.ContentMap">
	    
		SELECT t.ubseq,
			  <foreach collection="selectColumnsList" item="item" index="index"  separator=", ">
				${item}
			  </foreach>
	      FROM ${tableName} t
		 WHERE 1 = 1
		   AND t.ubseq = #{ubseq}
	
	</select>
	
	<!-- 지우개 클릭시 초기화 대상 컬럼 정보 조회 -->
	<select id="selectEraserTargetList" parameterType="map" resultType="com.hsck.ubfw.component.com.cmm.util.ContentMap">
	
		SELECT o.obj_id
		     , o.obj_nm
		  FROM fwform f
		 INNER JOIN fwobj o
		    ON f.obj_id = o.obj_id
		 WHERE 1 = 1
		   AND (f.obj_id = #{up_obj_id} OR f.up_obj_id = #{up_obj_id})
		   AND f.obj_id <![CDATA[ <> ]]> #{obj_id}
	
	</select>
	
	<!-- 즐겨찾기 정보 조회 -->
	<select id="selectBookMarkList" parameterType="map" resultType="egovMap">
	
		SELECT m.menu_id
		     , m.menu_nm
		     , m.url
		     , (SELECT CASE WHEN COUNT(*) > 0 THEN 'Y' ELSE 'N' END
		          FROM fwmenuscrin s
		         WHERE 1 = 1
		           AND s.menu_id = b.menu_id) AS scrin_yn
		     , CASE WHEN r.role_id = '0000' THEN 'N' ELSE 'Y' END AS role_yn 
		  FROM cm_cfguser u
		 INNER JOIN ( select role_id,menu_id from fwrolemenu group by role_id,menu_id ) r
		    ON u.role_id = r.role_id
		 INNER JOIN fwmenu m
		    ON r.menu_id = m.menu_id
		 INNER JOIN fwbookmark b
		    ON m.menu_id = b.menu_id
		   AND u.user_id = b.user_id
		 WHERE 1 = 1
		   AND u.user_id = #{user_id}
		 ORDER BY m.menu_nm
	
	</select>
	
	<!-- 즐겨찾기 위치 변경 -->
	<delete id="updateBookMarkPos" parameterType="map">
	
		UPDATE cm_cfguser
		   SET bookmark_pos = #{bookmark_pos}
		     , upd_id       = #{upd_id}
		     , upd_tm       =  f_getcurtm('')
		 WHERE 1 = 1
		   AND user_id = #{user_id} 
	
	</delete>
	
	<!-- 즐겨찾기 등록 -->
	<delete id="insertBookMark" parameterType="map">
	
		INSERT INTO fwbookmark (user_id, menu_id, reg_id, upd_id, reg_tm, upd_tm)
		     VALUES (#{user_id}
		           , #{menu_code}
		           , #{reg_id}
		           , #{upd_id}
		           ,  f_getcurtm('')
		           ,  f_getcurtm('')
		           )
	
	</delete>
	
	<!-- 즐겨찾기 삭제 -->
	<delete id="deleteBookMark" parameterType="map">
	
		DELETE FROM fwbookmark
	          WHERE 1 = 1
	            AND user_id = #{user_id}
	            AND menu_id = #{menu_code}
	
	</delete>

	<!-- 탭메뉴 목록 조회 -->
	<select id="selectTabList" parameterType="map" resultType="egovMap">
	
		SELECT t.menu_id
		     , t.scrin_id AS tab_id
		     , t.scrin_nm AS tab_nm
		     , t.tbl_nm
		  FROM (
		        SELECT menu_id
				     , scrin_id
				     , scrin_nm
				     , tbl_nm
				     , show_sn
				  FROM (     
				        SELECT m.menu_id
				             , s.scrin_id
				             , hsnull(s.scrin_nm,m1.menu_nm) scrin_nm
				             , s.tbl_nm
				             , m.show_sn
				          FROM fwmenuscrin m
				         INNER JOIN fwscrin s
				            ON m.scrin_id = s.scrin_id
				         INNER JOIN fwmenu m1
				            ON m.SCRIN_ID = m1.menu_id  <!-- 스크린명 없을경우 스크린id와 메뉴명 같은 경우 메뉴명 사용 -->
				         WHERE 1 = 1
				           AND m.menu_id = #{menu_code}
				           AND s.use_yn  = 'Y'
				           AND s.scrin_id != #{scrin_code} 
				         ORDER BY s.scrin_id
				       ) a
				  WHERE 1 = 1				  
		        ) t
		   INNER JOIN ( select  MENU_ID from fwrolemenu  where     (#{role_code} like  'D%' or role_id =#{role_code}) group by MENU_ID ) r
		      ON ( t.MENU_ID = r.MENU_ID   ) 
		   WHERE 1 = 1 
		   ORDER BY show_sn, tab_id

	</select>
	
	<!-- 테이블 key 정보 조회 -->
	<select id="selectKeyColList_old" parameterType="map" resultType="egovMap">
	
		SELECT LOWER(column_name) AS key_col
		  FROM ALL_CONS_COLUMNS A
		 WHERE 1 = 1
		   AND (A.TABLE_NAME, A.CONSTRAINT_NAME) IN (SELECT TABLE_NAME
		                                                  , CONSTRAINT_NAME
		                                               FROM ALL_CONSTRAINTS
		                                              WHERE 1 = 1
		                                                AND CONSTRAINT_TYPE = 'P' 
		                                             )
		    AND UPPER(table_name) = UPPER(#{masterTableName})	
		    AND UPPER(owner) = UPPER(#{owner})	                            
	
	</select>
	
	<!-- 테이블 key 정보 조회 -->
	<select id="selectKeyColList" parameterType="map" resultType="egovMap">
	
		SELECT LOWER(column_name) AS key_col
		FROM  INFORMATION_SCHEMA.columns  A
		WHERE 1 = 1
		AND column_key = 'PRI'
		AND UPPER(table_name) = UPPER(#{masterTableName})	
		AND UPPER(table_schema) = UPPER(#{owner})
	
	</select>
	
		<!-- 테이블 key 정보 조회 -->
	<select id="selectTabKeyColList" parameterType="map" resultType="egovMap"> 
		SELECT tabcol AS key_col from fwmenuscrin where menu_id=#{menu_code} and scrin_id=#{scrin_code} and tabcol is not null
	</select>

	<!-- 탭 메뉴에 해당되는 그리드 DATA 조회 whereCol 추가 -->
	<select id="selectTabDataListOrg" parameterType="map" resultType="egovMap">
	
		SELECT ubseq,       
			  <foreach collection="selectColumnsList" item="item" index="index"  separator=", ">
				${item}
			  </foreach>
		  FROM (
		  		SELECT ROWNUM rnum
		  		     , M.*
		  		  FROM (
		  		  		SELECT <include refid="com.hsck.ubfw.component.include.maria.rownum" />
		  		  		     , T.*
		  		  		  FROM ${tableName} T
		  		  		  , <include refid="com.hsck.ubfw.component.include.maria.rownumTbl" />
					     WHERE 1 = 1
					       <if test="whereCol != null and whereCol != '' ">   
						     AND ${whereCol}
						  </if>
					       AND ${tabKeyCol} IN (SELECT ${keyCol}
					                          FROM ${masterTableName}
					                         WHERE 1 = 1
					                           AND ubseq = #{ubseq}
					                       )
					     ORDER BY ${OrderByColumn} ${OrderByType}				 					      
		  		       ) M		  		   
		       ) t
	      WHERE rnum <![CDATA[ <= #{lastIndex} ]]> AND rnum <![CDATA[ > #{firstIndex} ]]>
	
	</select>
	
	
	<!-- 탭 메뉴에 해당되는 그리드 데이터 목록 총갯수 조회 -->	
	<select id="selectTabDataListCntOrg" parameterType="map" resultType="int">
	
		SELECT COUNT(*) totcnt
	      FROM ${tableName}
		 WHERE 1 = 1
		  <if test="whereCol != null and whereCol != '' ">   
		     AND ${whereCol}
		  </if>
		   AND ${tabKeyCol} = (SELECT ${keyCol}
	                          FROM ${masterTableName}
	                         WHERE 1 = 1
	                           AND ubseq = #{ubseq}
	                       )
	
	</select>

	
	
	
	<!-- 탭 메뉴에 해당되는 그리드 DATA 조회 whereCol 추가 -->
	<select id="selectTabDataList" parameterType="map" resultType="egovMap">
	
		SELECT ubseq,       
			  <foreach collection="selectColumnsList" item="item" index="index"  separator=", ">
				${item}
			  </foreach>
		  FROM (
		  		SELECT ROWNUM rnum
		  		     , M.*
		  		  FROM (
		  		  		SELECT <include refid="com.hsck.ubfw.component.include.maria.rownum" />
		  		  		     , T.*
		  		  		  FROM ${tableName} T
		  		  		  , <include refid="com.hsck.ubfw.component.include.maria.rownumTbl" />
					     WHERE 1 = 1
					       <if test="whereCol != null and whereCol != '' ">   
						     AND ${whereCol}
						  </if>
					       AND (${tabKeyCol}) =  (${keyVal}) 
					     ORDER BY ${OrderByColumn} ${OrderByType}				 					      
		  		       ) M		  		   
		       ) t
	      WHERE rnum <![CDATA[ <= #{lastIndex} ]]> AND rnum <![CDATA[ > #{firstIndex} ]]>
	
	</select>
	
	
	
	<!-- 탭 메뉴에 해당되는 그리드 데이터 목록 총갯수 조회 -->	
	<select id="selectTabDataListCnt" parameterType="map" resultType="int">
	
		SELECT count(*) totcnt
		  FROM (
		  		SELECT ROWNUM rnum
		  		     , M.*
		  		  FROM (
		  		  		SELECT <include refid="com.hsck.ubfw.component.include.maria.rownum" />
		  		  		     , T.*
		  		  		  FROM ${tableName} T
		  		  		  , <include refid="com.hsck.ubfw.component.include.maria.rownumTbl" />
					     WHERE 1 = 1
					       <if test="whereCol != null and whereCol != '' ">   
						     AND ${whereCol}
						  </if>
					       AND (${tabKeyCol}) =  (${keyVal})	      
		  		       ) M		  		   
		       ) t  
	</select>
	
	
		
	<!-- 탭메뉴에 해당되는 버튼 정보 조회 -->
	<select id="selectTabBtnList" parameterType="map" resultType="egovMap">
	
		SELECT o.obj_id
		     , hsnull(f.obj_nm,o.obj_nm) AS obj_nm
		     , o.col_id
		     , hsnull(f.obj_type,o.obj_type) AS obj_type 
		     , s.scrin_id AS tab_id
			 , s.dblclick_yn
		     , f.ext_fun
		  FROM fwmenuscrin m
		 INNER JOIN fwscrin s
		    ON m.scrin_id = s.scrin_id
		 INNER JOIN fwform f
		    ON s.scrin_id = f.scrin_id
		 INNER JOIN fwobj o
		    ON f.obj_id = o.obj_id          
		 WHERE 1 = 1
		   AND m.menu_id = #{menu_code}
		   AND f.dtl_show_yn = 'Y'
		   AND s.use_yn = 'Y'
		   AND o.obj_type = 'button_g'
	    
	</select>
	
	<!-- AutoComplete 기능으로 조회 조건을 조회 -->
	<select id="selectAutoCompleteList" parameterType="map" resultType="egovMap">
		SELECT col_id FROM ( 
			SELECT a.*  FROM (
				SELECT 
				<choose>
					
					<when test="key_col =='cust_nm' or key_col =='rep_cust_nm' ">
						concat(hsnull(TRIM(${auto_col}),'') , ' [' , hsnull(f_enc('2','name',TRIM(${key_col})),'') , ']') AS col_id
					</when>
					
					<when test="key_col != null and key_col != '' ">
						concat(hsnull(TRIM(${auto_col}),'') , ' [' , hsnull( TRIM(${key_col}) ,'') , ']') AS col_id
					</when>
				
					<otherwise>
						hsnull(TRIM(${auto_col}),'')
					</otherwise>
				</choose>
				FROM ${auto_tbl}
				where 0=0
				<choose>
				
					<when test="key_col != null and key_col != ''  and  (key_col =='cust_nm' or key_col =='rep_cust_nm' or key_col =='cust_id' or key_col =='rep_cust_id' )">	
					
					 and (   f_enc('2','name',TRIM(cust_nm) ) like concat('%', #{result} ,'%')   
						or   ${auto_col} like concat('%', #{result} ,'%')
						)
					 
					</when>
					<when test="key_col != null and key_col != '' ">
						and ( 
							(hsnull(TRIM(${auto_col}),'') LIKE  (concat('%', hsnull(#{result},'') ,'%')) )  
							or ( ${key_col} LIKE  (concat('%', hsnull(#{result},'') ,'%')) )
						)
					</when>
					<when test="where_col != null and where_col != '' ">
						and  ${where_col}  
					</when>
					
					<otherwise>
						and ( hsnull(TRIM(${auto_col}),'') LIKE  (concat('%', hsnull(#{result},'') ,'%')) ) 
					</otherwise>
				</choose>
				  
				
				<choose>
					 <when test="auto_tbl=='mb_cfgitem'  ">
							ORDER BY (case when item_id like 'T%' then 0 else 1 end) ,item_id,nm
					</when>
					<otherwise>
						ORDER BY ${auto_col}
					</otherwise>
				</choose>
			) a
		 ) a
		 WHERE 1 = 1
		 limit 50
	
	</select>
	
	<!-- 객체id로 update 할 컬럼 및 파라메타 정보 조회 -->
	<select id="selectUpdateColInfo" parameterType="map" resultType="egovMap">
	
		SELECT upd_col_info
		  FROM fwobj
		 WHERE 1 = 1
		   AND obj_id = #{obj_id}
	
	</select>
	
	<!-- 객체(컬럼) 정보 변경 -->
	<update id="updateObjColInfo" parameterType="map">
	
		UPDATE ${tableName}
		   SET upd_id = #{upd_id}
		     , upd_tm =  f_getcurtm('')		     
			 ${sql}		   
		 WHERE 1 = 1
		   AND ubseq = #{ubseq}
	
	</update>
	
	<!-- 일괄데이터 등록 -->
	<insert id="insertBundleUploadContent" parameterType="map">
		INSERT INTO ${tableName} (ubseq, reg_id, upd_id, reg_tm, upd_tm
        	<foreach collection="insertColumsList" item="item" index="index" open="," separator=", " close=")">
				${item}
		  	</foreach>
		VALUES (f_getsn(#{tableName},'ubseq')
			   ,#{reg_id}
		       , #{upd_id}
		       ,  f_getcurtm('')		              
		       ,  f_getcurtm('')
		       <foreach collection="insertDataList" item="item" index="index" open="," separator=", " close=")">
				  ${item}
			   </foreach>
		
		on duplicate key 
			update upd_id = #{upd_id}
		       			, upd_tm =  f_getcurtm('')		               
					   <foreach collection="updateDataList" item="item" index="index" open="," separator=", ">
						 ${item}
					   </foreach>
			
		
		
		
		
	 	
	 
	</insert>
	
	<!-- obj_id 에 해당하는 sql 문 조회 -->
	<select id="selectObjSqlList" parameterType="map" resultType="egovMap">
	
		SELECT obj_sql
		  FROM fwobj
		 WHERE 1 = 1
		   AND obj_id = #{obj_id}
	
	</select>

	<!-- 화면ID에 해당되는 SQL 문 조회 -->
	<select id="getScrinSql" parameterType="map" resultType="egovMap">

		SELECT scrin_sql1
		     , scrin_sql2
		     , scrin_sql3
		  FROM fwscrinsql
		 WHERE 1 = 1
		   AND scrin_id = #{scrin_code}
		   AND sql_type = #{search_stdr}
	
	</select>

	<resultMap id="fwscrinsql-result" type="java.util.HashMap" >
		<result property="scrinSql1" column="scrin_sql1" javaType="java.lang.String" />
		<result property="scrinSql2" column="scrin_sql2" javaType="java.lang.String" />
		<result property="scrinSql3" column="scrin_sql3" javaType="java.lang.String" />
		<result property="scrinSqlClob1" column="scrin_sql_clob_1" jdbcType="CLOB" javaType="java.lang.String" />
		<result property="scrinSqlClob2" column="scrin_sql_clob_2" jdbcType="CLOB" javaType="java.lang.String" />
		<result property="scrinSqlClob3" column="scrin_sql_clob_3" jdbcType="CLOB" javaType="java.lang.String" />
	</resultMap>
	<!-- 화면ID에 해당되는 SQL 문 조회 -->
	<select id="getScrinSqlClob" parameterType="java.util.HashMap" resultMap="fwscrinsql-result">
		SELECT scrin_sql1
		, scrin_sql2
		, scrin_sql3
		, scrin_sql_clob_1
		, scrin_sql_clob_2
		, scrin_sql_clob_3
		FROM fwscrinsql
		WHERE 1 = 1
		AND scrin_id = #{scrin_code}
		AND sql_type = #{search_stdr}

	</select>
	
	<!-- 그리드 편집 정보 조회 -->
	<select id="selectGridEditInfoList" parameterType="map" resultType="egovMap">
	
		SELECT t1.scrin_id
		     , t1.opert_type
		     , t1.opert_seq
		     , t1.seq
		     , t1.col_id
		     , t1.cell_color
		     , t1.obj_type
		     , t1.col_no
		     , t1.find_obj_id
		     , (SELECT COUNT(*)
		          FROM fwgridedit t2
		         WHERE 1 = 1
		           AND t1.scrin_id   = t2.scrin_id
		           AND t1.opert_type = t2.opert_type
		           AND t1.opert_seq  = t2.opert_seq
		       ) AS row_cnt
		  FROM fwgridedit t1
		 WHERE 1 = 1
		   AND t1.use_yn = 'Y'
		   AND t1.scrin_id = #{scrin_code}
		 ORDER BY t1.opert_type, t1.opert_seq, t1.seq
	
	</select>
	
	<!-- 공통 조회 인지 xml_id 조회인지 확인 -->
	<select id="getScrinXmlIdSelect"  parameterType="map" resultType="String">
	
		SELECT xml_id
		  FROM fwscrin
		 WHERE 1 = 1
		   AND scrin_id = #{scrin_code}
	
	</select>
	
	
		
	<!-- pjh 공통조회 조건 -->
	<select id="getWhereCond2"  parameterType="map" resultType="String">
	
		SELECT find_cond
		  FROM fwscrin
		 WHERE 1 = 1
		   AND scrin_id = #{scrin_code}
	
	</select>
	
	
		
	<!-- pjh 공통조회 조건 -->
	<select id="getMonWhereCond2"  parameterType="map" resultType="String">
	
		SELECT find_cond
		  FROM fwscrincond
		 WHERE 1 = 1
		   AND scrin_id = #{scrin_code}
		   and mon_type=#{mon}
	
	</select>
	
	
		<!-- pjh 공통조회 조건 -->
	<select id="getWhereCond"  parameterType="map" resultType="String">	
		SELECT hsnull(ms.find_cond, s.find_cond) find_cond
		  FROM fwmenuscrin ms 
		  inner join fwscrin s on ( ms.scrin_id=s.scrin_id)
		 WHERE 1 = 1
		   AND ms.scrin_id = #{scrin_code}
		   AND ms.menu_id = #{menu_code}
	</select>
	
	<select id="getMonWhereCond"  parameterType="map" resultType="String">	
		 
		SELECT hsnull(ms.find_cond, s.find_cond) find_cond
		  FROM fwmenuscrin ms 
		  inner join fwscrincond s on ( ms.scrin_id=s.scrin_id)
		 WHERE 1 = 1
		   AND ms.scrin_id = #{scrin_code}
		   AND ms.menu_id = #{menu_code}
		   AND s.mon_type = #{mon}
	
	</select>
	
	
	<!-- DB 암/복호화 -->
	<select id="getCryptoData"  parameterType="map" resultType="String">
	
		<!-- 암호화 -->
		<if test='crypto_gubun == "ENC" '>
		
			SELECT UNIBILL_CRYPTO.ENC_AES256(#{crypto_val})
  			  FROM dual
  			
		</if>
		
		<!-- 복호화 -->
		<if test='crypto_gubun == "DEC" '>
		
			SELECT UNIBILL_CRYPTO.DEC_AES256(#{crypto_val})
  			  FROM dual
		
		</if>		
	
	</select>
	
	<!-- DB 암/복호화 -->
	<select id="getCryptoValDB"  parameterType="map" resultType="String">
	
		<!-- 암호화 -->
		<if test='crypto_gubun == "1" '>
		
			SELECT ${crypto_func}( ${crypto_gubun}, #{crypto_colID}, #{crypto_val} )
  			  FROM dual
  		</if>
		
		<!-- 복호화 -->
		<if test='crypto_gubun == "2" '>
		
			SELECT ${crypto_func}( ${crypto_gubun}, #{crypto_colID}, #{crypto_val} )
  			  FROM dual
		
		</if>		
	
	</select>
	
		<!-- od_no, cont_seq 생성 -->
	<select id="getSeqStrGen"  parameterType="map" resultType="String"> 
		SELECT to_char( f_getseqstr(#{key_nm}) )
  		  FROM dual
	
	</select>
	
	<!-- ubseq 생성 -->
	<select id="getUbseqGen"  parameterType="map" resultType="String">
	
		SELECT to_char(F_GETSN(#{tbl_nm}, #{col_nm}))
  		  FROM dual
	
	</select>
	
	<select id="selectInsertUbseq" parameterType="map" resultType="String" >
		select ubseq from ${tableName}
		where 1=1
		${ubseqsql}
	</select>
	
	<select id="selectInsertUbseqNoKey" parameterType="map" resultType="String" >
		SELECT LAST_INSERT_ID();
	</select>
	
	<select id="selectfwformHeaderList" parameterType="map" resultType="egovMap" >
		select a.show_sn, a.obj_id, hsnull(a.crypto_yn,'N') as crypto_yn
	    	, hsnull(b.xml_id, a.xml_id) as xml_id
	    	, hsnull(b.grp_cd, a.grp_cd) as grp_cd
	    	, hsnull(b.grp_type, a.grp_type) as grp_type
	    	, hsnull(b.obj_sql, a.obj_sql) as obj_sql
	    	, b.col_tbl
		from fwform a 
		left join fwobj b on (a.obj_id = b.obj_id)
		where a.scrin_id = #{scrinCode}
			and a.show_type in ('1','3','5') 
		order by a.show_sn, a.obj_id
	</select>
	
	<select id="selectRawCdr" parameterType="map" resultType="egovMap" >
		select
			a.cdrseq
			,a.pbx_type
			,a.con_type
			,a.pbx_sn
			,a.call_status
			,a.call_type
			,a.setuptm
			,a.sday
			,a.stm
			,a.eday
			,a.etm
			,a.setupdur
			,a.dur
			,a.dosu
			<!-- 
			,a.ocaller
			,a.ocallee
			 -->
			 
			,f_telnoname(a.pbx_sn,a.ocaller,a.eday) ocaller              
		    ,f_telnoname(a.pbx_sn,a.ocallee,a.eday) ocallee 
		    ,f_telnoname(a.pbx_sn,a.rdn,a.eday) RDN  
		    ,f_telnoname(a.pbx_sn,a.fcallee,a.eday) fcallee    
	        ,f_showtelnonm(a.callernm, a.ncaller) ncaller
	        ,f_showtelnonm(a.calleenm, a.ncallee) ncallee				        
		    ,f_showtelnonm(a.callernm, a.ncaller) ncaller
			,f_showtelnonm(a.calleenm, a.ncallee) ncallee
			,f_showtelnonm('', a.BILLNO) BILLNO
			,a.cid			
			,a.iug_nm
			,a.irt_nm
			,a.itn_nm
			,a.iip,oug_nm
			,a.ort_nm
			,a.otn_nm
			,a.oip,grpcd
			,a.dgrpcd
			,a.irt_no
			,a.ort_no
			,a.ireason
			,a.oreason
			,a.callid
			,a.btype
			,a.cama_sn
			,a.ocost
			,a.vcost
			,a.cost
			,a.callee_area_nm
			,a.high_yn
			,a.long_yn
			,a.pstn_type
			,a.caller_alter_yn
			,a.del_yn
			,a.callee_alter_yn
			,CONCAT( substr(a.upd_tm,1,4),'-', substr(a.upd_tm,5,2),'-', substr(a.upd_tm,7,2), ' ', substr(a.upd_tm,9,2),':', substr(a.upd_tm,11,2),':', substr(a.upd_tm,13,2))  as upd_tm
			,a.file_nm
			,CONCAT( substr(a.SDAY,1,4),'-', substr(a.SDAY,5,2),'-', substr(a.SDAY,7,2), ' ', substr(a.STM,1,2),':', substr(a.STM,3,2),':', substr(a.STM,5,2))  as sdaynm
			,CONCAT( substr(a.EDAY,1,4),'-', substr(a.EDAY,5,2),'-', substr(a.EDAY,7,2), ' ', substr(a.ETM,1,2),':', substr(a.ETM,3,2),':', substr(a.ETM,5,2))  as edaynm
			,(case when a.HIGH_YN='Y' then '예' else '아니오' end ) AS high_ynNm
			,(case when a.LONG_YN='Y' then '예' else '아니오' end ) AS long_ynNm
			,(case when a.CALLER_ALTER_YN='Y' then '예' else '아니오' end ) AS caller_alter_ynNm
			,(case when a.DEL_YN='Y' then '예' else '아니오' end ) AS del_ynNm
			,(case when a.CALLEE_ALTER_YN='Y' then '예' else '아니오' end ) AS callee_alter_ynNm
			,(select nm  from CM_CFGBASECD x  where GRP_CD='BTYPE'  and a.btype = x.val) as btypeNm
			,(select nm  from CM_CFGBASECD x  where GRP_CD='CONN_TYPE'  and a.CON_TYPE = x.val) as conn_typeNm
			,(select nm  from CM_CFGBASECD x  where GRP_CD='PBX_TYPE'  and a.PBX_TYPE = x.val) as pbx_typeNm
			,(select nm from pb_cfgpbx x where a.PBX_SN = x.pbx_sn) as pbx_snNm
			,(select nm  from CM_CFGBASECD x  where GRP_CD='CALL_STATUS'  and a.CALL_STATUS = x.val) as call_statusNm
			,(select nm  from CM_CFGBASECD x  where GRP_CD='CALL_TYPE'  and a.CALL_TYPE = x.val) as call_typeNm
			,(select nm  from CM_CFGBASECD x  where GRP_CD='NOBILL'  and a.nobill = x.val) as nobill
			,(select nm from PB_CFGRTNO x where a.ort_no = x.rt_no) as ort_noNm
			,(select nm from PB_CFGRTNO x where a.irt_no = x.rt_no) as irt_noNm
			,(select nm  from CM_CFGBASECD x  where GRP_CD='PSTN_TYPE'  and a.PSTN_TYPE = x.val) as pstn_typeNm
			,(select nm  from CM_CFGBASECD x  where GRP_CD='TERM_CAUSE'  and a.IREASON = x.val) as ireasonNm
			,(select nm  from CM_CFGBASECD x  where GRP_CD='TERM_CAUSE'  and a.OREASON = x.val) as oreasonNm
			<!-- 
			,(case when f_jojikname(a.grpcd, a.eday) is null then '미등록' else f_jojikname(a.grpcd, a.eday) end) as grpcdnm
       		,(case when f_jojikname(a.dgrpcd, a.eday) is null then '미등록' else f_jojikname(a.dgrpcd, a.eday) end) as dgrpcdnm
       		 -->
       		,(case when hsnull(callergrpnm,'~')='~' then '미등록' else concat(callergrpnm ,'(',a.grpcd,')' ) end) as grpcdnm
       		,(case when hsnull(calleegrpnm,'~')='~' then '미등록' else concat(calleegrpnm ,'(',a.dgrpcd,')' ) end) as dgrpcdnm
			 <!-- 한화손보,우리카드
			 ,f_encuse('Y','2','cdr', b.cdr) cdr
			 ,f_encuse('N','2','cdr', b.cdr) cdr   인천교육청/ 현대카커케 암호화 없음
			 -->
			,f_encraw('2', b.cdr) cdr 
		from pb_pbxcdr${smonth} a
		left join pb_pbxraw${smonth} b on (a.cdrseq = b.cdrseq and b.cdrseq = #{scdrseq}) 
		where a.cdrseq = #{scdrseq}
	</select>
	
	<select id="selectRawNm" parameterType="map" resultType="egovMap">
		select * from pb_cfgcdr where pbx_type = #{pbxtype}
	</select>
	
	<select id="selectHisColcd" parameterType="map" resultType="egovMap" >
		select a.bill_ym
			,a.sheet_sn
			,a.col_sn
			,a.col_cd
			,case when col_nm is null or col_nm ='' then a.col_cd else b.col_nm end as col_nm
		from mb_tc_hiscol a
		left join mb_tc_colcd b on (a.sheet_sn = b.sheet_sn and a.col_cd = b.col_cd) 
		where a.bill_ym = #{billYm} and a.sheet_sn = #{sheetSn}
		order by bill_ym, sheet_sn, col_sn
	</select>
	
	<select id="getRawDataList" parameterType="map" resultType="egovMap" >
		select a.*, b.deli
		from mb_tc_data a
		left join mb_tc_sheet b on (a.SHEET_SN = b.SHEET_SN)
		where a.bill_ym = #{billYm} and a.sheet_sn = #{sheetSn} and a.rowno = #{rowno}
	</select>
	
	<select id="selectFixHDList" parameterType="map" resultType="egovMap">
		select b.col_id
		,case when a.obj_nm is null or a.obj_nm ='' then b.obj_nm else a.obj_nm end as col_nm
		from fwform a 
		left join fwobj b on (a.obj_id = b.obj_id)  
		where scrin_id = #{scrin_code} and show_type in ('1','2') 
		order by cast(show_sn as int) 
	</select>
	
	<select id="updateDerestrict" parameterType="map" >
		UPDATE cm_cfguser
		   SET failcnt = '0' 
		  <if test="reset != null and reset != '' ">   
		     , LASTLOGIN_DT = sysdate()
		  </if>
		  <if test="notuse != null and notuse != '' ">   
		     , NOTUSE_DT = sysdate()
		     , use_yn = 'N'
		  </if>
		  <if test="userDocNo != null and userDocNo != '' ">   
		     , doc_no = #{userDocNo}
		  </if>
		  
		 WHERE 1 = 1
		   AND ubseq = #{ubseq}
	</select>
	
	<select id="selectDerestrictResultList"  parameterType="map" resultType="egovMap">
		select failcnt
		 , date_format(lastlogin_dt,'%Y-%m-%d %H:%i:%s') as lastlogin_dt
		 , date_format(notuse_dt,'%Y-%m-%d %H:%i:%s') as notuse_dt    
		from cm_cfguser where ubseq = #{ubseq}
	</select>
	
	
	
	<!-- 계정보안 정보 조회 ,min_len2   -->
	<select id="selectPassRule" parameterType="map" resultType="egovMap">
		SELECT  min_len
			,min_len2
			,max_len         
			,seq_len         
			,same_len        
			,sp_yn           
			,lowchar_yn        
			,num_yn          
			,upchar_yn       
			,pass_chg_term        
			,pass_fail       
			,nologin_pariod  
			,nologin_term    
			,nologin_yn      
			,duplogin_yn
			,his_pass_cnt
			,remark    
			from  cm_cfgpassrule	
	</select>
	
	<select id="getRoleLevel" parameterType="map" resultType="int">
		select  role_level
		from fwrole 
		where role_id = #{role_id}
	</select>
	
	
	
	<insert id="insertHisuser">
		INSERT INTO cm_hisuser (ubseq, reg_id, reg_tm, work_type
		                          , user_id , user_nm , role_id)
		        
		        	VALUES (f_getsn('cm_hisuser','ubseq')
		        	  ,	#{reg_id}
		              ,  f_getcurtm('')		              
		              , #{workType}
		              , #{user_id} 
		              , #{user_nm} 
		              , #{role_id} 
		            )
		        
		        
	</insert>
	
	<select id="selectFileSeq" parameterType="map" resultType="egovMap">
		select f_getseqstr( 'file_sn') as file_sn  from dual
	</select>
	
	<select id="getcmfile" parameterType="map" resultType="map">
		select file_grp from fwform where scrin_id = #{scrin_code} and obj_id in ('fileupload' , 'sfileupload') 
	</select>
	
	<insert id="insertcmfile" parameterType="map">
		insert into cm_file(
			file_sn
			, nm
			, file_grp
			, file_path
			, file_sz
			, role_level
			, reg_id
			, reg_tm
			, ubseq
			, del_yn
			, del_id
			, del_tm
		) 
		values (
			#{filesn}
			,#{filename}
			,#{fgrp}
			,#{uploadPath}
			,#{filesize}
			,#{rolelevel}
			,#{regid}
			,f_getcurtm('')
			,f_getsn('cm_file','ubseq')
			,'N'
			,''
			,''
		)
	</insert>
	
	<insert id="insertcmnotice" parameterType="map">
		insert into cm_notice(
			file_sn
			, nm
			, file_grp
			, file_path
			, file_sz
			, role_level
			, reg_id
			, reg_tm
			, ubseq
			, del_yn
			, del_id
			, del_tm
		) 
		values (
			#{filesn}
			,#{filename}
			,#{fgrp}
			,#{uploadPath}
			,#{filesize}
			,#{rolelevel}
			,#{regid}
			,f_getcurtm('')
			,f_getsn('cm_file','ubseq')
			,'N'
			,''
			,''
		)
	</insert>
	
	<select id="selectcfguser" parameterType="map" resultType="egovMap">
		select
			ubseq, reg_id, upd_id, reg_tm, upd_tm
		    , user_id , user_nm , use_yn , role_id , ipchk_yn , tel_no , mobile , email , pass , failcnt 
 		from cm_cfguser where ubseq = #{dubseq}
	</select>
	
	<insert id="odfile"  parameterType="map">
		insert into mb_cfgod_file(
			od_no
			,file_sn
			,REG_ID
			,UPD_ID
			,REG_TM
			,UPD_TM
			,ubseq
		)values(
			#{odNo}
			,#{filesn}
			,#{regid}
			,#{regid}
			,f_getcurtm('')
			,f_getcurtm('')
			,f_getsn('mb_cfgodcont_file','ubseq')
		)
	</insert>
	
	<insert id="insertodcontfile"  parameterType="map">
		insert into mb_cfgodcont_file(
			cont_seq
			,file_sn
			,od_no
			,up_type
			,REG_ID
			,UPD_ID
			,REG_TM
			,UPD_TM
			,ubseq 
		)
		select 
			cont_seq 
			,b.file_sn
			,a.od_no
			,#{fgrp}
			,#{regid}
			,#{regid}
			,f_getcurtm('')
			,f_getcurtm('')
			,f_getsn('mb_cfgodcont_file','ubseq')
		from mb_cfgodcont a 
		 inner join  mb_cfgod_file b on ( a.od_no=b.od_no)
		 where a.od_no=	#{odNo}
		 and b.file_sn not in ( select file_sn from mb_cfgodcont_file where od_no=	#{odNo})			 
	</insert>
	
	
	
	<insert id="contfile"  parameterType="map">
		insert into mb_cfgodcont_file(
			cont_seq
			,file_sn
			,od_no
			,up_type
			,REG_ID
			,UPD_ID
			,REG_TM
			,UPD_TM
			,ubseq 
		)values(
			#{contSeq}
			,#{filesn}
			,#{odNo}
			,'C'
			,#{regid}
			,#{regid}
			,f_getcurtm('')
			,f_getcurtm('')
			,f_getsn('mb_cfgodcont_file','ubseq') 
		)
	</insert>
	
	<insert id="mailfile"  parameterType="map">
		
	</insert>
	
	<select id="fileCnt" parameterType="map" resultType="int">
		select count(*) cnt from mb_cfgod_file where od_no = #{od_no}
	</select>
	
	<select id="contfileCnt" parameterType="map" resultType="int">
		select count(*) cnt from mb_cfgodcont_file where cont_seq = #{cont_seq}
	</select>
	
	<select id="getfileInfo" parameterType="map" resultType="egovMap">
		select * from cm_file where file_sn = #{file_sn}
	</select>
	
	<select id="getubseqfileInfo" parameterType="map" resultType="egovMap">
		select * from cm_file where file_sn = (
			select file_sn from ${tableName} where ubseq = #{ubseq}
		) 
		and del_yn = 'N' 
	</select>
	
	<select id="getubseqimgfileInfo" parameterType="map" resultType="egovMap">
		select * from cm_file where file_sn = (
			select popup_img from ${tableName} where ubseq = #{ubseq}
		) 
		and del_yn = 'N' 
	</select>
	
	
	<select id="cmFileCnt" parameterType="map" resultType="int">
		select count(*) cnt from cm_file where od_no = #{od_no}
	</select>
	
	<select id="selectFileGRP" parameterType="map" resultType="egovMap">
		select file_grp from fwform where scrin_id = #{scrin_code} and obj_id in ('fileupload', 'sfileupload')
	</select>
	
	<select id="selectOdFileList" parameterType="map" resultType="egovMap">
		select * 
		from mb_cfgod_file a 
		left join cm_file b on (a.file_sn = b.file_sn)
		where od_no = #{odno}
		<if test="sfilesn != null and sfilesn != '' ">   
		   	and b.file_sn = #{sfilesn}
		</if>
		<if test="sfilenm != null and sfilenm != '' ">   
		   	and b.nm like '%'||#{sfilenm}||'%'
		</if>
		
	</select>
	
	<select id="selectContFileList" parameterType="map" resultType="egovMap">
		select * 
		from mb_cfgodcont_file a 
		left join cm_file b on (a.file_sn = b.file_sn)
		where cont_seq = #{contseq}
		<if test="sfilesn != null and sfilesn != '' ">   
		   	and b.file_sn = #{sfilesn}
		</if>
		<if test="sfilenm != null and sfilenm != '' ">   
		   	and b.nm like '%'||#{sfilenm}||'%'
		</if>
		
	</select>
	
	<select id="selectFileList" parameterType="map" resultType="egovMap">
		select * 
		from cm_file a 
		where file_sn = #{filesn}
		and del_yn = 'N'
	</select>
	
	
	
	<select id="selectOdFileListCnt" parameterType="map" resultType="int" >
		select count(*) 
		from mb_cfgod_file a 
		left join cm_file b on (a.file_sn = b.file_sn)
		where od_no = #{odno}
		<if test="sfilesn != null and sfilesn != '' ">   
		   	and b.file_sn = #{sfilesn}
		</if>
		<if test="sfilenm != null and sfilenm != '' ">   
		   	and b.nm like '%'||#{sfilenm}||'%'
		</if>
	</select>
	
	<select id="selectContFileListCnt" parameterType="map" resultType="int" >
		select count(*) 
		from mb_cfgodcont_file a 
		left join cm_file b on (a.file_sn = b.file_sn)
		where cont_seq = #{contseq}
		<if test="sfilesn != null and sfilesn != '' ">   
		   	and b.file_sn = #{sfilesn}
		</if>
		<if test="sfilenm != null and sfilenm != '' ">   
		   	and b.nm like '%'||#{sfilenm}||'%'
		</if>
	</select>
	
	<select id="selectCmfileList"  parameterType="map" resultType="egovMap">
		select * from cm_file 
		where file_sn in
		<foreach collection="filesns" item="item" index="index" open="(" separator=", " close=")">
			#{item}
		</foreach>
		and del_yn != 'Y'
	</select>
	
	<delete id="deleteCmfile" parameterType="map">
		update cm_file set del_yn = 'Y' where file_sn = #{filesn}
	</delete>
	
	<delete id="deleteOdfile" parameterType="map">
		delete from mb_cfgod_file  
		where file_sn in
		<foreach collection="filesns" item="item" index="index" open="(" separator=", " close=")">
			#{item}
		</foreach>
	</delete>
	
	<delete id="deleteContfile" parameterType="map">
		delete from mb_cfgodcont_file
		where file_sn in
		<foreach collection="filesns" item="item" index="index" open="(" separator=", " close=")">
			#{item}
		</foreach> 
		<if test="cont_seq_arr != null and cont_seq_arr != '' ">   
		   	and cont_seq in (${cont_seq_arr})
		</if>		
	</delete>
	
	<select id="chkContfile" parameterType="map" resultType="int">
		select count(*) from mb_cfgodcont_file where file_sn = #{filesn} 
	</select>
	
	<select id="selectContfileInfo" parameterType="map" resultType="egovMap">
		select up_type from mb_cfgodcont_file where file_sn = #{filesn} 
	</select>
	
	<select id="getinterval" resultType="int">
		select '8' from dual
	</select>

	<select id="selectGd" parameterType="map" resultType="String" >
		select cont_gd_id from mb_cfgod where od_no=(
		select od_no from ${masterTableName}
		where 1=1
		and ubseq = #{ubseq})
	</select>
		
	<select id="selectDynamicColTbl" parameterType="map" resultType="String" >
		select dyn_tbl from fwscrin
		where 1=1
		and scrin_id = #{scrin_code}
	</select>
	
	<select id="getImgubseqInfo" parameterType="map" resultType="egovMap">
		select * from cm_file where file_sn = (
			select popup_img from cm_notice where ubseq = #{ubseq}
		)
		and del_yn = 'N' 
	</select>
	
	<select id="getExt" parameterType="map" resultType="egovMap">
		select * from cm_cfgbasecd where grp_cd = 'IMGEXT'
	</select>
	
	<select id="getNoticeList" parameterType="map" resultType="egovMap">
		select a.* from (
			select <include refid="com.hsck.ubfw.component.include.maria.rownum" />
			, a.title
			, a.msg
			, a.reg_id
			, concat(substr(a.reg_tm, 1,4), '-', substr(a.reg_tm, 5,2), '-', substr(a.reg_tm, 6,2)) as reg_tm
			, a.file_sn
			, a.popup_yn
			, a.popup_img
			, concat(a.ubseq) as ubseq
			from cm_notice a
			, <include refid="com.hsck.ubfw.component.include.maria.rownumTbl" />
			WHERE 1 = 1
			<if test='notice_type == "all"'>
				<if test="s_notice != null and s_notice != '' ">
					and (title like concat('%', #{s_notice} ,'%') or msg like concat('%', #{s_notice} ,'%') )
				</if>	  
			</if>
			<if test='notice_type == "sub"'>
				<if test="s_notice != null and s_notice != '' ">
					and title like concat('%', #{s_notice} ,'%')
				</if> 
			</if>
			<if test='notice_type == "msg"'>
				<if test="s_notice != null and s_notice != '' ">
					and msg like concat('%', #{s_notice} ,'%')
				</if>  
			</if>
			ORDER BY ubseq DESC
		) a
		ORDER BY ROWNUM
		<include refid="com.hsck.ubfw.component.include.maria.pagingEnd"/>
	</select>
	
	<select id="getNoticeListCnt" resultType="int">
		select count(*) as cnt from cm_notice
		WHERE 1 = 1
		<if test='notice_type == "all"'>
			<if test="s_notice != null and s_notice != '' ">
				and (title like concat('%', #{s_notice} ,'%') or msg like concat('%', #{s_notice} ,'%') )
			</if>	  
		</if>
		<if test='notice_type == "sub"'>
			<if test="s_notice != null and s_notice != '' ">
				and title like concat('%', #{s_notice} ,'%')
			</if> 
		</if>
		<if test='notice_type == "msg"'>
			<if test="s_notice != null and s_notice != '' ">
				and msg like concat('%', #{s_notice} ,'%')
			</if>  
		</if>
	</select>
	
	<select id="selectNoticeDetail" parameterType="map" resultType="egovMap">
		select title
			,msg
			,(select user_nm from cm_cfguser x where x.user_id = a.reg_id)  reg_id  
			,upd_id
			,concat(substr(reg_tm,1,4), '.', substr(reg_tm,5,2), '.', substr(reg_tm,7,2), ' ', substr(reg_tm,9,2), ':', substr(reg_tm,11,2), ':', substr(reg_tm,13,2) ) reg_tm
			,upd_tm
			,popup_yn
			,file_sn
			,(select nm from cm_file x where x.file_sn = a.file_sn) file_nm
			,(select file_sz from cm_file x where x.file_sn = a.file_sn) file_sz
			,popup_img
			,(select nm from cm_file x where x.file_sn = a.popup_img) img_nm
			,(select file_sz from cm_file x where x.file_sn = a.popup_img) img_sz
			,email
		from cm_notice a where ubseq =#{ubseq}
	</select>
	
	<select id="getFAQList" parameterType="map" resultType="egovMap">
		select a.* from (
			select <include refid="com.hsck.ubfw.component.include.maria.rownum" />
			, a.title
			, a.msg
			, a.reg_id
			, concat(substr(a.reg_tm, 1,4), '-', substr(a.reg_tm, 5,2), '-', substr(a.reg_tm, 6,2)) as reg_tm
			, a.file_sn
			, concat(a.ubseq) as ubseq
			from cm_faq a
			, <include refid="com.hsck.ubfw.component.include.maria.rownumTbl" />
			WHERE 1 = 1
			<if test='faq_type == "all"'>
				<if test="s_faq != null and s_faq != '' ">
					and (title like concat('%', #{s_faq} ,'%') or msg like concat('%', #{s_faq} ,'%') )
				</if>	  
			</if>
			<if test='faq_type == "sub"'>
				<if test="s_faq != null and s_faq != '' ">
					and title like concat('%', #{s_faq} ,'%')
				</if> 
			</if>
			<if test='faq_type == "msg"'>
				<if test="s_faq != null and s_faq != '' ">
					and msg like concat('%', #{s_faq} ,'%')
				</if>  
			</if>
			ORDER BY ubseq DESC
		) a
		ORDER BY ROWNUM
		<include refid="com.hsck.ubfw.component.include.maria.pagingEnd"/>
	</select>
	
	<select id="getFAQListCnt" resultType="int">
		select count(*) as cnt from cm_faq
		WHERE 1 = 1
		<if test='faq_type == "all"'>
			<if test="s_faq != null and s_faq != '' ">
				and (title like concat('%', #{s_faq} ,'%') or msg like concat('%', #{s_faq} ,'%') )
			</if>	  
		</if>
		<if test='faq_type == "sub"'>
			<if test="s_faq != null and s_faq != '' ">
				and title like concat('%', #{s_faq} ,'%')
			</if> 
		</if>
		<if test='faq_type == "msg"'>
			<if test="s_faq != null and s_faq != '' ">
				and msg like concat('%', #{s_faq} ,'%')
			</if>  
		</if>
	</select>
	
	<select id="selectFAQDetail" parameterType="map" resultType="egovMap">
		select title
			,msg
			,(select user_nm from cm_cfguser x where x.user_id = a.reg_id)  reg_id  
			,upd_id
			,concat(substr(reg_tm,1,4), '.', substr(reg_tm,5,2), '.', substr(reg_tm,7,2), ' ', substr(reg_tm,9,2), ':', substr(reg_tm,11,2), ':', substr(reg_tm,13,2) ) reg_tm
			,upd_tm
			,file_sn
			,(select nm from cm_file x where x.file_sn = a.file_sn) file_nm
			,(select file_sz from cm_file x where x.file_sn = a.file_sn) file_sz
			
		from cm_faq a where ubseq =#{ubseq}
	</select>
	
	<update id="updateSync" parameterType="map">
		update cm_cfgtbl set sync_tm = f_getcurtm('') where tbl_nm = #{tableName}
	</update>
	
	<select id="exeQueryCnt" parameterType="map" resultType="map">
		select count(*) as cnt from (
			${exeQuery}
		) a
	</select>
	
	<select id="exeQuery" parameterType="map" resultType="java.util.LinkedHashMap">
		${exeQuery}
		<choose>
			<when test='isExcel == "N" and page == 0'>
				limit 1
			</when>
			<when test='isExcel == "N" and page != 0'>
				limit #{limitSize}  offset #{firstIndex} 
			</when>
			<otherwise>
			</otherwise>
		</choose>
		    
	</select>
	
	<select id="exeQueryExcel" parameterType="map" resultType="egovMap">
		${exeQuery}
	</select>
	
	<select id="conSnList"  parameterType="map" resultType="egovMap">
		select con_sn, name from cm_cfgdbcon order by con_sn
	</select>
	
	<select id="selectpbxtelList" parameterType="map" resultType="egovMap">
		SELECT ubseq, TRIM(to_char( kook)) AS kook 
			, concat(TRIM(to_char( kook)), TRIM(to_char( s_no))) AS s_no 
			, concat(TRIM(to_char( kook)), TRIM(to_char( e_no))) AS e_no 
			, CASE WHEN sday IS NOT NULL and length(sday)>6 THEN to_char(concat(SUBSTR(sday, 1, 4) , '-' , SUBSTR(sday, 5, 2) , '-' , SUBSTR(sday, 7, 2))) WHEN sday !='' THEN sday ELSE ' ' END AS sday 
			, TRIM(to_char( nm)) AS nm 
			, TRIM(to_char( rep_no)) AS rep_no 
			, CASE WHEN eday IS NOT NULL and length(eday)>6 THEN to_char(concat(SUBSTR(eday, 1, 4) , '-' , SUBSTR(eday, 5, 2) , '-' , SUBSTR(eday, 7, 2))) WHEN eday !='' THEN eday ELSE ' ' END AS eday 
			, grp_cd 
		FROM ( 
			SELECT ROWNUM rnum , M.* FROM ( 
				SELECT @rownum:=@rownum+1 as ROWNUM , T.* 
				FROM pb_cfgtelno T 
				, (select @rownum:=0) tmp 
				WHERE 1 = 1 
				ORDER BY kook ASC , s_no ASC , e_no ASC , sday ASC , nm ASC , rep_no ASC , eday ASC , grp_cd ASC 
			) M 
		) t 
		WHERE rnum <![CDATA[ <= #{lastIndex} ]]> AND rnum <![CDATA[ > #{firstIndex} ]]>
	</select>
	
	<select id="selectpbxtelListCnt" parameterType="map" resultType="int">
		SELECT count(*)
		FROM pb_cfgtelno 
	</select>
	
	<select id="selectpbxtelListDetail" parameterType="map" resultType="map">
		SELECT ubseq, TRIM(to_char( kook)) AS kook 
			, concat(TRIM(to_char( kook)), TRIM(to_char( s_no))) AS s_no 
			, concat(TRIM(to_char( kook)), TRIM(to_char( e_no))) AS e_no 
			, CASE WHEN sday IS NOT NULL and length(sday)>6 THEN to_char(concat(SUBSTR(sday, 1, 4) , '-' , SUBSTR(sday, 5, 2) , '-' , SUBSTR(sday, 7, 2))) WHEN sday !='' THEN sday ELSE ' ' END AS sday 
			, TRIM(to_char( nm)) AS nm 
			, TRIM(to_char( rep_no)) AS rep_no 
			, CASE WHEN eday IS NOT NULL and length(eday)>6 THEN to_char(concat(SUBSTR(eday, 1, 4) , '-' , SUBSTR(eday, 5, 2) , '-' , SUBSTR(eday, 7, 2))) WHEN eday !='' THEN eday ELSE ' ' END AS eday 
			, grp_cd 
			, man_yn
			, remark
			, reg_id
			, reg_tm
			, upd_id
			, upd_tm
		FROM pb_cfgtelno 
		where ubseq =#{ubseq} 
	</select>
	
	<!-- 인가된 단말에서만 접속 가능 -->
	<select id="selectIpCnt" parameterType="map" resultType="int">
		SELECT count(*) from cm_cfgmenu_ip 
		where 1 = 1 
		and #{sIp} between ip and hsnull(to_ip,ip)
	</select>
	 
	<!-- 고객 ID 발부 -->
	<select id="getCustIdGen"  parameterType="map" resultType="String"> 
		SELECT to_char( f_gencustId(#{custType}) )
  		  FROM dual
	</select>
	
	<!-- blob파일 그룹 가져오기 -->
	<select id="getBlobfile" parameterType="map" resultType="map">
		select file_grp from fwform where scrin_id = #{scrin_code} and obj_id = 'cfileupload';
	</select>
		
	<!-- 통신사신청메일관리 저장 -->
	<insert id="insertBlobFile" parameterType="map">
		insert into cm_blobfile(
			file_sn
			, nm
			, file_grp
			, file
			, file_sz
			, reg_id
			, reg_tm
			, ubseq
			, del_yn
			, del_id
			, del_tm
		) 
		values (
			#{filesn}
			,#{nm}
			,#{fgrp}
			,#{file}
			,#{filesz}
			,#{regid}
			,f_getcurtm('')
			,f_getsn('cm_blobfile','ubseq')
			,'N'
			,''
			,''
		)
	</insert>
	
	<!-- 파읿순번 부여 -->
	<select id="getFilesn" parameterType="map" resultType="String">
		select file_sn from ${tableName} 
		where mail_sn = #{data}
	</select>
	
	<!-- 파일이름 가져오기 -->
	<select id="getFilenm" parameterType="map" resultType="String">
		select nm from cm_blobfile where file_sn = #{file_sn}
		and del_yn = 'N' 
	</select>
	
	<!-- Blob파일 정보 가져오기 -->
	<resultMap type="hashMap" id="blob">
		<result property="file" column="file" jdbcType="BLOB" javaType="_byte[]"></result>
	</resultMap>
	
	<select id="getBlobfileInfo" parameterType="map" resultMap="blob">
		select file from cm_blobfile where file_sn = #{file_sn}
		and del_yn = 'N' 
	</select>
	
	<!-- mail정보 검색 -->
	<select id="selectmailInfo" parameterType="map" resultType="egovMap">
		select title,body,ref,head,tail,from_email,to_email from ${tableName}
		where mail_sn = #{mailsn}
	</select>
	
	<!-- 파일그룹 가져오기 -->
	<select id="getFilegrp" parameterType="map" resultType="String">
		select file_grp from cm_blobfile where file_sn = #{dfilesn}
		and del_yn = 'N' 
	</select>
	
	<!-- 메일데이터 삭제 -->
	<delete id="deletemailData" parameterType="map">
		delete from cm_blobfile
		where file_grp = #{filegrp}
	</delete>
	
	<!-- 파일그룹 수정 -->
	<update id="updatefilegrp" parameterType="map">
		update cm_blobfile
		set file_Grp = #{filegrp}
		where file_sn = #{dfilesn}
	</update>
	
	<!-- 담당자 정보 검색 -->
	<select id="selectManagerInfo" parameterType="map" resultType="egovMap">
		select f_enc('2','email',email) as email,f_enc('2','ref',ref) as ref,title,content,tail from mb_cfgtc_email
		where tc_sn = #{val}
	</select>
	
	<!-- 수신자 검색 -->
	<select id="selectFromEmail" parameterType="map" resultType="egovMap">
		select f_enc('2','email',email) as fromEmail from cm_cfguser
		where user_id = #{userid}
	</select>
	
	<!-- 메일서버 정보 검색 -->
	<select id="selectcfgmailInfo" resultType="egovMap">
		select ip, port, auth_yn, f_enc('2','email',email) as email, f_enc('2','emailpw',emailpw) as emailpw from cm_cfgmail
		where svr_sn = 1
	</select>
	
	<select id="getfunc" parameterType="map" resultType="egovMap">
		select ${func}(<if test="params != null"><foreach collection="params" item="param" index="index"  separator="," >#{param}</foreach></if> <if test='userYn == "Y"'>,#{userid}</if>) as retval from dual
	</select>
	
	<select id="getproc" parameterType="map" statementType="CALLABLE" resultType="map">
		CALL ${proc}(<if test="params != null"><foreach collection="params" item="param" index="index"  separator="," >#{param}</foreach></if> <if test='userYn == "Y"'>,#{userid}</if>)
	</select>
	
	<select id="selectcheonggu"  parameterType="map" resultType="egovMap">
		select *,f_enc('2','addr',addr) as addr2,f_enc('2','srn',srn) as srn2, f_enc('2','email',email) as email2, f_enc('2','bank_acc',bank_acc) as bankAcc2, f_enc('2','rep_cust_nm',rep_cust_nm) as repCustNm2, f_enc('2','bank_accnm',bank_accnm) as bankAccnm2 from mb_rptrcustcost
		WHERE 1 = 1
		<if test="repCustID != null and repCustID != '' ">
			AND rep_cust_id = #{repCustID}
		</if>
		AND bill_ym = #{billYm}
	</select>	
	
	<select id="selectspbrn" resultType="egovMap">
		select f_enc('2','sp_brn',sp_brn) as sp_brn, sp_nm, notice, giro_no, notice_giro from mb_cfgsp
	</select>
	
	<insert id="insertcheonggu" parameterType="map">
		insert into mb_hismail(
			bill_ym	
			, rep_cust_id
			, job_type
			, msg
			, cnt
			, status
			, reg_id
			, reg_tm
		) 
		values (
			#{billYm}
			,#{repCustId}
			,#{jobType}
			,#{msg}
			,#{cnt}
			,#{status}
			,'hanssak1'
			,  f_getcurtm('')
		)
	</insert>
	
	<update id="updateGBlobFile" parameterType="map">
		update mb_rptrcustcost
		set file1 = #{file}
		WHERE 1 = 1
		AND rep_cust_id = #{repCustId}
		AND bill_ym = #{billYm}
	</update>
	
	<select id="selectBmailBody" parameterType="map" resultType="egovMap">
		select title, body, sym
		from cm_cfgmailbody
		where mail_type = 'B' and sym = #{billYm}
	</select>
	
	<select id="sendSmsProc" parameterType="map" statementType="CALLABLE" resultType="String"> 
	{call prc_insod(#{billYm, mode=IN, jdbcType=VARCHAR, javaType=string},#{repCustId, mode=IN, jdbcType=VARCHAR, javaType=string},#{userId, mode=IN, jdbcType=VARCHAR, javaType=string})}
	</select>
	
	<insert id="inserthisbill" parameterType="map">
		insert into mb_hisbillmail(
			bill_ym	
			, rep_cust_id
			, title
			, body
			, mail_id
			, send_tm
			, file_nm1
			, file1
			, ubseq
			, send_yn
		) 
		values (
			#{billYm}
			,#{repCustId}
			,#{title}
			,#{body}
			,#{mailId}
			,f_getcurtm('')
			,#{fileNm1}
			,#{file1}
			,f_getsn('mb_hisbillmail','ubseq')
			,#{sendYn}
		)
	</insert>
	
	<select id="selectMisu" parameterType="map" resultType="egovMap">
		select substr(issue_date, 1, 6) ym, bal_amt
		from ora_vw_line_if_balamt_info
		where substr(issue_Date,1,6) <![CDATA[ >= ]]> #{ym} and rep_cust_cd = #{repCustCd} order by issue_date desc limit 4
	</select>
		
	<select id="test" parameterType="map" resultType="egovMap">
		select userid, reg_date, reg_user_ID from bbb_t1
	</select>
	
	<select id="kpsaSend" parameterType="map" resultType="egovMap">
		select 
   			 hsnull( if_div              ,'')   if_div           
			,hsnull( work_div            ,'')   work_div         
			,hsnull( acc_ym          ,'')   	acc_ym     
			,hsnull( rep_cust_id         ,'')   rep_cust_id       
			,hsnull( cust_cd             ,'')   cust_cd         
			,hsnull( charge_plan_date    ,'')   charge_plan_date 
			,hsnull( irs_num             ,'')   irs_num          
			,hsnull( irs_sub_num         ,'')   irs_sub_num      
			,hsnull( vat_cd              ,'')   vat_cd           
			,hsnull( sales_amt           ,0 )   sales_amt        
			,hsnull( vat_amt             ,0 )   vat_amt          
			,hsnull( acc_attr            ,'')   acc_attr         
			,hsnull( trade_type          ,'')   trade_type   
			,hsnull( deposit_plan_date   ,'')   deposit_plan_date      
			,hsnull( pay_terms           ,'')   pay_terms        
			,hsnull( charge_contents     ,'')   charge_contents  
			,hsnull( acc_code            ,'')   acc_code         
			,hsnull( if_status           ,'')   if_status
			<!--
			,hsnull( reg_date            ,'')   reg_date         
			,hsnull( mod_date            ,'')   mod_date
			 --> 
			,hsnull( reg_id    ,'')   reg_id  
			,hsnull( upd_id    ,'')   upd_id			            
			,hsnull( ubseq               ,'')   ubseq  
		from if_kpsa 			
        where      
        if_div      = '001'
		and work_div    = hsnull( #{work_div}     ,  work_div    ) 
		and acc_ym  = hsnull( #{acc_ym}   ,  acc_ym  ) 
		and cust_cd     = hsnull( #{cust_cd}     ,  cust_cd     ) 
		and rep_cust_id = hsnull( #{rep_cust_id}  ,  rep_cust_id ) 
		and cust_cd !='-'
		and acc_code !='-'
	</select>
	
	<update id="updateStatus" parameterType="map">
		update if_kpsa set if_status='Y' where ubseq = #{ubseq}
	</update>
	
	<select id="sellidRegister" parameterType="map" resultType="egovMap">
		select                              
			   hsnull(srn            ,'')  srn                      
			  ,hsnull(jrn            ,'')  jrn                          
			  ,hsnull(nm             ,'')  nm                       
			  ,hsnull(j_nm           ,'')  j_nm                     
			  ,hsnull(brn            ,'')  brn                      
			  ,hsnull(company_type   ,'')  company_type             
			  ,hsnull(zip_no         ,'')  zip_no                   
			  ,hsnull(addr1          ,'')  addr1                    
			  ,hsnull(addr2          ,'')  addr2                    
			  ,hsnull(svctype        ,'')  svctype                  
			  ,hsnull(jongmok        ,'')  jongmok                  
			  ,hsnull(rep_nm         ,'')  rep_nm                   
			  ,hsnull(daenae_type    ,'')  daenae_type           
			  ,hsnull(f_enc('1','reg_id',reg_id),'') reg_id
			  ,hsnull(f_enc('1','upd_id',upd_id),'') upd_id
		from mb_cfgsell			
        where      
        srn = #{srn} and jrn = hsnull(#{jrn}, jrn)
	</select>
	
	<select id="selectgl" parameterType="map" resultType="egovMap">
		select
			compcd                                                                                                                                          
			,accunt                                                                                                                                         
			,jurdat                                                                                                                                         
			,jurno                                                                                                                                          
			,jurser                                                                                                                                         
			,hsnull(jscd1,'') as jscd1                                                                                                                                         
			,hsnull(jscd2,'')  as jscd2                                                                                                                                     
			,hsnull(indpcd,'')  as indpcd                                                                                                                                      
			,hsnull(inempno,'')  as inempno                                                                                                                                     
			,hsnull(remark,'')  as remark                                                                                                                                     
			,hsnull(accdat,'')  as accdat                                                                                                                                     
			,hsnull(acmndiv,'') as acmndiv                                                                                                                                     
			,hsnull(jurno1,'')  as jurno1                                                                                                                                     
			,hsnull(acctcd,'')  as acctcd                                                                                                                                    
			,hsnull(bgitcd ,'')  as bgitcd                                                                                                                                    
			,hsnull(strmkcd,'')  as strmkcd                                                                                                                                   
			,hsnull(strmknm,'') as strmknm                                                                                                                                    
			,hsnull(addrmk,'')  as addrmk                                                                                                                                    
			,hsnull(dbamt,'')  as dbamt                                                                                                                                    
			,hsnull(cdamt,'')  as cdamt                                                                                                                                    
			,hsnull(rtacut,'')  as rtacut                                                                                                                                     
			,hsnull(rtdpcd,'')   as rtdpcd                                                                                                                                   
			,hsnull(osaccunt,'')  as osaccunt                                                                                                                                   
			,hsnull(osjurdat,'')  as osjurdat                                                                                                                                   
			,hsnull(osjurno,'')   as osjurno                                                                                                                                 
			,hsnull(osjurser,'')  as osjurser                                                                                                                                  
			,hsnull(mnitcd1,'')   as mnitcd1                                                                                                                                   
			,hsnull(mnit1   ,'')  as mnit1                                                                                                                                   
			,hsnull(mnitcd2 ,'')  as mnitcd2                                                                                                                                   
			,hsnull(mnit2  ,'')   as mnit2                                                                                                                                   
			,hsnull(mnitcd3 ,'')  as mnitcd3                                                                                                                                  
			,hsnull(mnit3   ,'')  as mnit3                                                                                                                                  
			,hsnull(mnitcd4 ,'')  as  mnitcd4                                                                                                                                 
			,hsnull(mnit4   ,'')  as  mnit4                                                                                                                                              
			from mb_gl399t
			where hsnull(send_yn,'N')='N' 
			and hsnull(if_yn,'N')='N'
			and  jurdat=#{jurdat} and inempno = hsnull(#{inempno},inempno)   and jurno = hsnull(#{jurno},jurno) and jurser = hsnull(#{jurser},jurser)
	</select>
	
	<select id="selectgl2" parameterType="map" resultType="egovMap">
		select                                                                                                                                            
			jurdat                                                                                                                                         
			,hsnull(jurno,'')  as jurno                                                                                                                                         
			,hsnull(jurser,'')  as jurser                                                                                                                                                                                                                                                                           
			,hsnull(inempno,'')  as inempno                                                                                                                                                                                                                                                                                
			from mb_gl399t
			where send_yn ='Y' 
			and  jurdat=#{jurdat} and inempno = hsnull(#{inempno},inempno)   and jurno = hsnull(#{jurno},jurno) and jurser = hsnull(#{jurser},jurser)
	</select>
	
	<update id="updategl" parameterType="map">
		update mb_gl399t
		set send_yn='Y'
		where 
		    hsnull(send_yn,'N')='N' 
		    and hsnull(if_yn,'N')='N'
			and  jurdat=#{jurdat} and inempno = hsnull(#{inempno},inempno)   and jurno = hsnull(#{jurno},jurno) and jurser = hsnull(#{jurser},jurser)		
	</update>
	
	<select id="selecttemp" parameterType="map" resultType="egovMap">
		select 
			compcd     
			,accunt    
			,jurdat    
			,jurno     
			,jurser    
			,hsnull(indpcd,'')  as indpcd  
			,hsnull(inempno,'')  as inempno     
			,hsnull(rtacut,'')  as rtacut    
			,hsnull(rtdpcd,'')  as rtdpcd   
			,hsnull(prodno1,'')  as prodno1  
			,hsnull(prodno2,'')  as prodno2  
			,hsnull(prodno3,'')  as prodno3  
			,hsnull(compno1,'')  as compno1  
			,hsnull(compno2 ,'')  as compno2  
			,hsnull(compno3,'')  as compno3  
			,hsnull(resino ,'')  as resino  
			,hsnull(custnm ,'')  as custnm  
			,hsnull(reprnm ,'')  as reprnm  
			,hsnull(addres ,'')  as addres  
			,hsnull(indutype,'')  as indutype 
			,hsnull(indukind,'')  as indukind 
			,hsnull(busidiv,'')  as busidiv 
			,hsnull(taxdiv1,'')  as taxdiv1  
			,hsnull(taxdiv2,'')  as taxdiv2  
			,hsnull(gubun1,'')  as gubun1  
			,hsnull(wrtdat,'')  as wrtdat  
			,hsnull(gonqty,'')  as gonqty  
			,hsnull(suptamt ,'')  as suptamt 
			,hsnull(totvat,'')  as totvat   
			,hsnull(saldat1,'')  as saldat1  
			,hsnull(itemnm1,'')  as itemnm1  
			,hsnull(supamt1,'')  as supamt1  
			,hsnull(vat1,'')  as  vat1    
			,hsnull(saldat2,'')  as saldat2  
			,hsnull(itemnm2,'')  as itemnm2 
			,hsnull(supamt2,'')  as supamt2  
			,hsnull(vat2,'')  as vat2     
			,hsnull(saldat3,'')  as saldat3  
			,hsnull(itemnm3,'')  as itemnm3  
			,hsnull(supamt3,'')  as supamt3  
			,hsnull(vat3,'')  as vat3     
			,hsnull(accdat,'')  as accdat   
			,hsnull(agryn,'')  as agryn    
			,hsnull(addyn,'')  as addyn    
			,hsnull(yymm  ,'')  as yymm   
			,hsnull(wrtno ,'')  as wrtno   
			,hsnull(userid ,'')  as userid  
			,hsnull(wrkstnid,'')  as wrkstnid 
			<!-- 
			,hsnull(adddate,'')  as adddate  
			,hsnull(upddate,'')  as upddate
			 -->  
			,hsnull(einvoice ,'')  as einvoice
			,hsnull(ectaxno,'')  as ectaxno 
			,hsnull(mpbno,'')  as mpbno                                                                                                                                                        
			from mb_temptx201t
			where hsnull(send_yn,'N')='N' 
			and  jurdat=#{jurdat} and inempno = hsnull(#{inempno},inempno)   and jurno = hsnull(#{jurno},jurno) and jurser = hsnull(#{jurser},jurser) 
	</select>
	
	<select id="selecttemp2" parameterType="map" resultType="egovMap">
		select 
			jurdat    
			,hsnull(jurno,'')  as jurno                                                                                                                                         
			,hsnull(jurser,'')  as jurser                                                                                                                                                                                                                                                                           
			,hsnull(inempno,'')  as inempno                                                                                                                                                   
			from mb_temptx201t
			where send_yn ='Y' 
			and  jurdat=#{jurdat} and inempno = hsnull(#{inempno},inempno)   and jurno = hsnull(#{jurno},jurno) and jurser = hsnull(#{jurser},jurser) 
	</select>
	
	<update id="updatetemp" parameterType="map">
		update mb_temptx201t
		set send_yn='Y'
		where 
		    hsnull(send_yn,'N')='N' 
			and  jurdat=#{jurdat} and inempno = hsnull(#{inempno},inempno)   and jurno = hsnull(#{jurno},jurno) and jurser = hsnull(#{jurser},jurser)		
	</update>
	
	<update id="updateglif" parameterType="map">
		update mb_gl399t
		set if_yn='Y'
		where 
		    hsnull(if_yn,'N')='N' 
			and  jurdat=#{jurdat} and inempno = hsnull(#{inempno},inempno)   and jurno = hsnull(#{jurno},jurno) and jurser = hsnull(#{jurser},jurser)		
	</update>
	
	<insert id="insertexcelReason" parameterType="map">
		insert into cm_hisexceldown(
			ymd	
			, menu_id
			, scrin_id
			, remark
			, user_id
			, role_id
			, ubseq
		) 
		values (
			substr(f_getcurtm(''),1,8)
			,#{menu_id}
			,#{scrin_code}
			,#{reasonMsg}
			,#{user_id}
			,#{role_code}
			,f_getsn('cm_hisexceldown','ubseq')
		)
	</insert>
	
	<delete id="deleteExcelUploadDelete" parameterType="map">
		delete from ${tableName}
	</delete>
	
	<select id="selectRavs" parameterType="map" resultType="egovMap">
	  select a.TR_DATE, a.txday_seq, a.VACCT_NO, a.CUST_CD, a.TR_AMT,a.deposit_yn,f_enc('1','REG_ID','-') as regId, f_enc('1','REG_ID','-') as updId, a.in_name, a.ERP_PROC_YN
		   from TB_RVAS_LIST a 
		   left join ap_cfgoddtl b on ( a.CUST_CD=b.cust_id and od_type in('0') )
		   where a.ERP_PROC_YN = #{erpProcYN} order by a.tr_date, a.CUST_CD;
	</select>
	
	<update id="updateRavs" parameterType="map">
		update TB_RVAS_LIST
		set ERP_PROC_DT = DATE_FORMAT(now(), '%Y%m%d%H%i%s'), txday_seq = #{seq}
		where ERP_PROC_YN = 'N' and cust_cd = #{custCd}
	</update>
	
	<update id="updateRavs2" parameterType="map">
		update TB_RVAS_LIST
		set deposit_yn = 'Y'
		where ERP_PROC_YN = 'N' and cust_cd = #{custCd}
	</update>
	
	<update id="updateRavs3" parameterType="map">
		update TB_RVAS_LIST
		set ERP_PROC_YN = 'Y'
		where ERP_PROC_YN = 'N' or ERP_PROC_YN = 'R' and cust_cd = #{custCd}	
	</update>
	
	<select id="tdaySeqCnt" parameterType="map" resultType="int">
		select max(txday_seq) from tb_rvas_list where TR_DATE = #{trDate} group by TR_DATE
	</select>
	
	<select id="depositCnt" parameterType="map" resultType="int">
		select count(deposit_yn) from tb_rvas_list where CUST_CD = #{custCd} and deposit_yn = 'Y'
	</select>
	
	<update id="updateDeposit" parameterType="map">
		update ap_cfgdeposit
		set txday_seq = #{seq}, in_day = #{inDay}, in_cost = #{inCost}
		where cust_id = #{custCd}	
	</update>
</mapper>